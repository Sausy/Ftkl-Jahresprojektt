ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_CSD_rawFilterData1,2,4
  18              		.global	CapSense_CSD_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_CSD_sensorBaseline, %object
  22              		.size	CapSense_CSD_sensorBaseline, 2
  23              	CapSense_CSD_sensorBaseline:
  24 0000 0000     		.space	2
  25              		.global	CapSense_CSD_sensorBaselineLow
  26 0002 0000     		.align	2
  27              		.type	CapSense_CSD_sensorBaselineLow, %object
  28              		.size	CapSense_CSD_sensorBaselineLow, 1
  29              	CapSense_CSD_sensorBaselineLow:
  30 0004 00       		.space	1
  31              		.global	CapSense_CSD_sensorSignal
  32 0005 000000   		.align	2
  33              		.type	CapSense_CSD_sensorSignal, %object
  34              		.size	CapSense_CSD_sensorSignal, 2
  35              	CapSense_CSD_sensorSignal:
  36 0008 0000     		.space	2
  37              		.global	CapSense_CSD_sensorOnMask
  38 000a 0000     		.align	2
  39              		.type	CapSense_CSD_sensorOnMask, %object
  40              		.size	CapSense_CSD_sensorOnMask, 1
  41              	CapSense_CSD_sensorOnMask:
  42 000c 00       		.space	1
  43              		.comm	CapSense_CSD_lowBaselineResetCnt,1,4
  44              		.global	CapSense_CSD_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_CSD_lowBaselineReset, %object
  48              		.size	CapSense_CSD_lowBaselineReset, 1
  49              	CapSense_CSD_lowBaselineReset:
  50 0000 05       		.byte	5
  51              		.global	CapSense_CSD_enableRawFilters
  52              		.type	CapSense_CSD_enableRawFilters, %object
  53              		.size	CapSense_CSD_enableRawFilters, 1
  54              	CapSense_CSD_enableRawFilters:
  55 0001 01       		.byte	1
  56              		.global	CapSense_CSD_fingerThreshold
  57 0002 0000     		.section	.rodata
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 2


  58              		.align	2
  59              		.type	CapSense_CSD_fingerThreshold, %object
  60              		.size	CapSense_CSD_fingerThreshold, 2
  61              	CapSense_CSD_fingerThreshold:
  62 0000 3200     		.short	50
  63              		.global	CapSense_CSD_noiseThreshold
  64 0002 0000     		.align	2
  65              		.type	CapSense_CSD_noiseThreshold, %object
  66              		.size	CapSense_CSD_noiseThreshold, 2
  67              	CapSense_CSD_noiseThreshold:
  68 0004 0300     		.short	3
  69              		.global	CapSense_CSD_hysteresis
  70 0006 0000     		.align	2
  71              		.type	CapSense_CSD_hysteresis, %object
  72              		.size	CapSense_CSD_hysteresis, 2
  73              	CapSense_CSD_hysteresis:
  74 0008 0A00     		.short	10
  75              		.global	CapSense_CSD_debounce
  76 000a 0000     		.align	2
  77              		.type	CapSense_CSD_debounce, %object
  78              		.size	CapSense_CSD_debounce, 1
  79              	CapSense_CSD_debounce:
  80 000c 02       		.byte	2
  81              		.bss
  82 000d 000000   		.align	2
  83              	CapSense_CSD_debounceCounter:
  84 0010 0000     		.space	2
  85              		.global	CapSense_CSD_rawDataIndex
  86 0012 0000     		.section	.rodata
  87 000d 000000   		.align	2
  88              		.type	CapSense_CSD_rawDataIndex, %object
  89              		.size	CapSense_CSD_rawDataIndex, 1
  90              	CapSense_CSD_rawDataIndex:
  91 0010 00       		.space	1
  92              		.global	CapSense_CSD_numberOfSensors
  93 0011 000000   		.align	2
  94              		.type	CapSense_CSD_numberOfSensors, %object
  95              		.size	CapSense_CSD_numberOfSensors, 1
  96              	CapSense_CSD_numberOfSensors:
  97 0014 01       		.byte	1
  98 0015 000000   		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  99              		.align	2
 100              		.global	CapSense_CSD_BaseInit
 101              		.code	16
 102              		.thumb_func
 103              		.type	CapSense_CSD_BaseInit, %function
 104              	CapSense_CSD_BaseInit:
 105              	.LFB33:
 106              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 3


   9:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 
  60:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	extern CapSense_CSD_CONFIG_TYPE_P4_v2_10 CapSense_CSD_config;
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 4


  66:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint16 CapSense_CSD_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     50u, 
  75:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint16 CapSense_CSD_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     3u, 
  79:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint16 CapSense_CSD_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, 
  83:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2u, 
  87:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 
  91:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  95:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  99:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value. 
 111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
 112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 5


 123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of 
 126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between 
 128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of 
 130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 107              		.loc 1 139 0
 108              		.cfi_startproc
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 84B0     		sub	sp, sp, #16
 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 117 0006 7860     		str	r0, [r7, #4]
 140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 118              		.loc 1 142 0
 119 0008 3B1C     		mov	r3, r7
 120 000a 0F33     		add	r3, r3, #15
 121 000c 1349     		ldr	r1, .L2
 122 000e 7A68     		ldr	r2, [r7, #4]
 123 0010 8A18     		add	r2, r1, r2
 124 0012 1278     		ldrb	r2, [r2]
 125 0014 1A70     		strb	r2, [r3]
 143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 126              		.loc 1 156 0
 127 0016 124B     		ldr	r3, .L2+4
 128 0018 7A68     		ldr	r2, [r7, #4]
 129 001a 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 6


 130 001c D15A     		ldrh	r1, [r2, r3]
 131 001e 114B     		ldr	r3, .L2+8
 132 0020 7A68     		ldr	r2, [r7, #4]
 133 0022 5200     		lsl	r2, r2, #1
 134 0024 D152     		strh	r1, [r2, r3]
 157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 135              		.loc 1 157 0
 136 0026 104A     		ldr	r2, .L2+12
 137 0028 7B68     		ldr	r3, [r7, #4]
 138 002a D318     		add	r3, r2, r3
 139 002c 0022     		mov	r2, #0
 140 002e 1A70     		strb	r2, [r3]
 158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 141              		.loc 1 158 0
 142 0030 0E4B     		ldr	r3, .L2+16
 143 0032 7A68     		ldr	r2, [r7, #4]
 144 0034 5200     		lsl	r2, r2, #1
 145 0036 0021     		mov	r1, #0
 146 0038 D152     		strh	r1, [r2, r3]
 159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 147              		.loc 1 160 0
 148 003a 3B1C     		mov	r3, r7
 149 003c 0F33     		add	r3, r3, #15
 150 003e 1B78     		ldrb	r3, [r3]
 151 0040 0221     		mov	r1, #2
 152 0042 0B4A     		ldr	r2, .L2+20
 153 0044 D154     		strb	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             
 175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 154              		.loc 1 175 0
 155 0046 064B     		ldr	r3, .L2+4
 156 0048 7A68     		ldr	r2, [r7, #4]
 157 004a 5200     		lsl	r2, r2, #1
 158 004c D15A     		ldrh	r1, [r2, r3]
 159 004e 094B     		ldr	r3, .L2+24
 160 0050 7A68     		ldr	r2, [r7, #4]
 161 0052 5200     		lsl	r2, r2, #1
 162 0054 D152     		strh	r1, [r2, r3]
 176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 7


 181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 163              		.loc 1 187 0
 164 0056 BD46     		mov	sp, r7
 165 0058 04B0     		add	sp, sp, #16
 166              		@ sp needed
 167 005a 80BD     		pop	{r7, pc}
 168              	.L3:
 169              		.align	2
 170              	.L2:
 171 005c 00000000 		.word	CapSense_CSD_widgetNumber
 172 0060 00000000 		.word	CapSense_CSD_sensorRaw
 173 0064 00000000 		.word	CapSense_CSD_sensorBaseline
 174 0068 00000000 		.word	CapSense_CSD_sensorBaselineLow
 175 006c 00000000 		.word	CapSense_CSD_sensorSignal
 176 0070 10000000 		.word	CapSense_CSD_debounceCounter
 177 0074 00000000 		.word	CapSense_CSD_rawFilterData1
 178              		.cfi_endproc
 179              	.LFE33:
 180              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 181              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 182              		.align	2
 183              		.global	CapSense_CSD_InitializeSensorBaseline
 184              		.code	16
 185              		.thumb_func
 186              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 187              	CapSense_CSD_InitializeSensorBaseline:
 188              	.LFB34:
 188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 8


 212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 189              		.loc 1 215 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 82B0     		sub	sp, sp, #8
 196              		.cfi_def_cfa_offset 16
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 200              		.loc 1 217 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a 181C     		mov	r0, r3
 203 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 204              		.loc 1 218 0
 205 0010 C046     		mov	r8, r8
 206              	.L5:
 207              		.loc 1 218 0 is_stmt 0 discriminator 1
 208 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 209 0016 031C     		mov	r3, r0
 210 0018 002B     		cmp	r3, #0
 211 001a FAD1     		bne	.L5
 219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 212              		.loc 1 224 0 is_stmt 1
 213 001c 7B68     		ldr	r3, [r7, #4]
 214 001e 181C     		mov	r0, r3
 215 0020 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 216              		.loc 1 225 0
 217 0024 BD46     		mov	sp, r7
 218 0026 02B0     		add	sp, sp, #8
 219              		@ sp needed
 220 0028 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE34:
 223              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 224 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 225              		.align	2
 226              		.global	CapSense_CSD_InitializeAllBaselines
 227              		.code	16
 228              		.thumb_func
 229              		.type	CapSense_CSD_InitializeAllBaselines, %function
 230              	CapSense_CSD_InitializeAllBaselines:
 231              	.LFB35:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 9


 226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the 
 234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 232              		.loc 1 252 0
 233              		.cfi_startproc
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 82B0     		sub	sp, sp, #8
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 242              		.loc 1 255 0
 243 0006 0023     		mov	r3, #0
 244 0008 7B60     		str	r3, [r7, #4]
 245 000a 06E0     		b	.L7
 246              	.L8:
 256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     	CapSense_CSD_InitializeSensorBaseline(i);
 247              		.loc 1 257 0 discriminator 2
 248 000c 7B68     		ldr	r3, [r7, #4]
 249 000e 181C     		mov	r0, r3
 250 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 251              		.loc 1 255 0 discriminator 2
 252 0014 7B68     		ldr	r3, [r7, #4]
 253 0016 0133     		add	r3, r3, #1
 254 0018 7B60     		str	r3, [r7, #4]
 255              	.L7:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 10


 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 256              		.loc 1 255 0 is_stmt 0 discriminator 1
 257 001a 7B68     		ldr	r3, [r7, #4]
 258 001c 002B     		cmp	r3, #0
 259 001e F5D0     		beq	.L8
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 260              		.loc 1 259 0 is_stmt 1
 261 0020 BD46     		mov	sp, r7
 262 0022 02B0     		add	sp, sp, #8
 263              		@ sp needed
 264 0024 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE35:
 267              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 268 0026 C046     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_CSD_InitializeEnabledBaselines
 271              		.code	16
 272              		.thumb_func
 273              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 274              	CapSense_CSD_InitializeEnabledBaselines:
 275              	.LFB36:
 260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 276              		.loc 1 287 0
 277              		.cfi_startproc
 278 0000 80B5     		push	{r7, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 11


 282 0002 82B0     		sub	sp, sp, #8
 283              		.cfi_def_cfa_offset 16
 284 0004 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 286              		.loc 1 291 0
 287 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 288              		.loc 1 292 0
 289 000a C046     		mov	r8, r8
 290              	.L10:
 291              		.loc 1 292 0 is_stmt 0 discriminator 1
 292 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 293 0010 031C     		mov	r3, r0
 294 0012 002B     		cmp	r3, #0
 295 0014 FAD1     		bne	.L10
 293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 296              		.loc 1 297 0 is_stmt 1
 297 0016 0023     		mov	r3, #0
 298 0018 7B60     		str	r3, [r7, #4]
 299 001a 11E0     		b	.L11
 300              	.L13:
 298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 301              		.loc 1 299 0
 302 001c 0B4A     		ldr	r2, .L14
 303 001e 7B68     		ldr	r3, [r7, #4]
 304 0020 101C     		mov	r0, r2
 305 0022 191C     		mov	r1, r3
 306 0024 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 307 0028 031C     		mov	r3, r0
 308 002a 3B60     		str	r3, [r7]
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 309              		.loc 1 302 0
 310 002c 3B68     		ldr	r3, [r7]
 311 002e 002B     		cmp	r3, #0
 312 0030 03D0     		beq	.L12
 303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 313              		.loc 1 305 0
 314 0032 7B68     		ldr	r3, [r7, #4]
 315 0034 181C     		mov	r0, r3
 316 0036 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 317              	.L12:
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 318              		.loc 1 297 0
 319 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 12


 320 003c 0133     		add	r3, r3, #1
 321 003e 7B60     		str	r3, [r7, #4]
 322              	.L11:
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 323              		.loc 1 297 0 is_stmt 0 discriminator 1
 324 0040 7B68     		ldr	r3, [r7, #4]
 325 0042 002B     		cmp	r3, #0
 326 0044 EAD0     		beq	.L13
 306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }  
 327              		.loc 1 308 0 is_stmt 1
 328 0046 BD46     		mov	sp, r7
 329 0048 02B0     		add	sp, sp, #8
 330              		@ sp needed
 331 004a 80BD     		pop	{r7, pc}
 332              	.L15:
 333              		.align	2
 334              	.L14:
 335 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 336              		.cfi_endproc
 337              	.LFE36:
 338              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 339              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 340              		.align	2
 341              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 342              		.code	16
 343              		.thumb_func
 344              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 345              	CapSense_CSD_UpdateBaselineNoThreshold:
 346              	.LFB37:
 309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor]. 
 320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 13


 335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between 
 341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 347              		.loc 1 352 0
 348              		.cfi_startproc
 349 0000 90B5     		push	{r4, r7, lr}
 350              		.cfi_def_cfa_offset 12
 351              		.cfi_offset 4, -12
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 87B0     		sub	sp, sp, #28
 355              		.cfi_def_cfa_offset 40
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 358 0006 7860     		str	r0, [r7, #4]
 353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint32 sign;
 355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 359              		.loc 1 357 0
 360 0008 3B1C     		mov	r3, r7
 361 000a 0F33     		add	r3, r3, #15
 362 000c 6849     		ldr	r1, .L27
 363 000e 7A68     		ldr	r2, [r7, #4]
 364 0010 8A18     		add	r2, r1, r2
 365 0012 1278     		ldrb	r2, [r2]
 366 0014 1A70     		strb	r2, [r3]
 358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 367              		.loc 1 358 0
 368 0016 3B1C     		mov	r3, r7
 369 0018 0C33     		add	r3, r3, #12
 370 001a 0322     		mov	r2, #3
 371 001c 1A80     		strh	r2, [r3]
 359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 14


 372              		.loc 1 366 0
 373 001e 3B1C     		mov	r3, r7
 374 0020 1033     		add	r3, r3, #16
 375 0022 644A     		ldr	r2, .L27+4
 376 0024 7968     		ldr	r1, [r7, #4]
 377 0026 4900     		lsl	r1, r1, #1
 378 0028 8A5A     		ldrh	r2, [r1, r2]
 379 002a 1A80     		strh	r2, [r3]
 367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if(CapSense_CSD_enableRawFilters != 0u)
 380              		.loc 1 369 0
 381 002c 624B     		ldr	r3, .L27+8
 382 002e 1B78     		ldrb	r3, [r3]
 383 0030 002B     		cmp	r3, #0
 384 0032 15D0     		beq	.L17
 370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			tempRaw = filteredRawData;
 373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]
 374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 															CapSense_CSD_rawFilterData2[sensor]);
 375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			tempRaw = filteredRawData;
 380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 															   CapSense_CSD_rawFilterData2[sensor]);
 382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 385              		.loc 1 390 0
 386 0034 614B     		ldr	r3, .L27+12
 387 0036 7A68     		ldr	r2, [r7, #4]
 388 0038 5200     		lsl	r2, r2, #1
 389 003a D35A     		ldrh	r3, [r2, r3]
 390 003c 3C1C     		mov	r4, r7
 391 003e 1034     		add	r4, r4, #16
 392 0040 3A1C     		mov	r2, r7
 393 0042 1032     		add	r2, r2, #16
 394 0044 1288     		ldrh	r2, [r2]
 395 0046 101C     		mov	r0, r2
 396 0048 191C     		mov	r1, r3
 397 004a FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 398 004e 031C     		mov	r3, r0
 399 0050 2380     		strh	r3, [r4]
 391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 400              		.loc 1 391 0
 401 0052 5A4B     		ldr	r3, .L27+12
 402 0054 7A68     		ldr	r2, [r7, #4]
 403 0056 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 15


 404 0058 391C     		mov	r1, r7
 405 005a 1031     		add	r1, r1, #16
 406 005c 0988     		ldrh	r1, [r1]
 407 005e D152     		strh	r1, [r2, r3]
 408              	.L17:
 392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				
 393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]
 395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor])
 403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
 406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* No Raw filters */
 407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 409              		.loc 1 417 0
 410 0060 574B     		ldr	r3, .L27+16
 411 0062 7A68     		ldr	r2, [r7, #4]
 412 0064 5200     		lsl	r2, r2, #1
 413 0066 D35A     		ldrh	r3, [r2, r3]
 414 0068 3A1C     		mov	r2, r7
 415 006a 1032     		add	r2, r2, #16
 416 006c 1288     		ldrh	r2, [r2]
 417 006e 9A42     		cmp	r2, r3
 418 0070 12D3     		bcc	.L18
 418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;	
 419              		.loc 1 419 0
 420 0072 544A     		ldr	r2, .L27+20
 421 0074 7B68     		ldr	r3, [r7, #4]
 422 0076 D318     		add	r3, r2, r3
 423 0078 0022     		mov	r2, #0
 424 007a 1A70     		strb	r2, [r3]
 420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 425              		.loc 1 420 0
 426 007c 504B     		ldr	r3, .L27+16
 427 007e 7A68     		ldr	r2, [r7, #4]
 428 0080 5200     		lsl	r2, r2, #1
 429 0082 D25A     		ldrh	r2, [r2, r3]
 430 0084 3B1C     		mov	r3, r7
 431 0086 1233     		add	r3, r3, #18
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 16


 432 0088 391C     		mov	r1, r7
 433 008a 1031     		add	r1, r1, #16
 434 008c 0988     		ldrh	r1, [r1]
 435 008e 8A1A     		sub	r2, r1, r2
 436 0090 1A80     		strh	r2, [r3]
 421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 437              		.loc 1 421 0
 438 0092 0123     		mov	r3, #1
 439 0094 7B61     		str	r3, [r7, #20]
 440 0096 0CE0     		b	.L19
 441              	.L18:
 422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 442              		.loc 1 425 0
 443 0098 494B     		ldr	r3, .L27+16
 444 009a 7A68     		ldr	r2, [r7, #4]
 445 009c 5200     		lsl	r2, r2, #1
 446 009e D15A     		ldrh	r1, [r2, r3]
 447 00a0 3B1C     		mov	r3, r7
 448 00a2 1233     		add	r3, r3, #18
 449 00a4 3A1C     		mov	r2, r7
 450 00a6 1032     		add	r2, r2, #16
 451 00a8 1288     		ldrh	r2, [r2]
 452 00aa 8A1A     		sub	r2, r1, r2
 453 00ac 1A80     		strh	r2, [r3]
 426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 454              		.loc 1 426 0
 455 00ae 0023     		mov	r3, #0
 456 00b0 7B61     		str	r3, [r7, #20]
 457              	.L19:
 427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#else
 432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 458              		.loc 1 432 0
 459 00b2 7B69     		ldr	r3, [r7, #20]
 460 00b4 002B     		cmp	r3, #0
 461 00b6 23D1     		bne	.L20
 462              		.loc 1 432 0 is_stmt 0 discriminator 1
 463 00b8 3B1C     		mov	r3, r7
 464 00ba 1233     		add	r3, r3, #18
 465 00bc 1B88     		ldrh	r3, [r3]
 466 00be 142B     		cmp	r3, #20
 467 00c0 1ED9     		bls	.L20
 433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 468              		.loc 1 435 0 is_stmt 1
 469 00c2 404A     		ldr	r2, .L27+20
 470 00c4 7B68     		ldr	r3, [r7, #4]
 471 00c6 D318     		add	r3, r2, r3
 472 00c8 1A78     		ldrb	r2, [r3]
 473 00ca 3F49     		ldr	r1, .L27+24
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 17


 474 00cc 7B68     		ldr	r3, [r7, #4]
 475 00ce CB18     		add	r3, r1, r3
 476 00d0 1B78     		ldrb	r3, [r3]
 477 00d2 9A42     		cmp	r2, r3
 478 00d4 09D3     		bcc	.L21
 436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 479              		.loc 1 437 0
 480 00d6 7B68     		ldr	r3, [r7, #4]
 481 00d8 181C     		mov	r0, r3
 482 00da FFF7FEFF 		bl	CapSense_CSD_BaseInit
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 483              		.loc 1 438 0
 484 00de 394A     		ldr	r2, .L27+20
 485 00e0 7B68     		ldr	r3, [r7, #4]
 486 00e2 D318     		add	r3, r2, r3
 487 00e4 0022     		mov	r2, #0
 488 00e6 1A70     		strb	r2, [r3]
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 489              		.loc 1 435 0
 490 00e8 46E0     		b	.L23
 491              	.L21:
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 492              		.loc 1 442 0
 493 00ea 364A     		ldr	r2, .L27+20
 494 00ec 7B68     		ldr	r3, [r7, #4]
 495 00ee D318     		add	r3, r2, r3
 496 00f0 1B78     		ldrb	r3, [r3]
 497 00f2 0133     		add	r3, r3, #1
 498 00f4 DAB2     		uxtb	r2, r3
 499 00f6 3349     		ldr	r1, .L27+20
 500 00f8 7B68     		ldr	r3, [r7, #4]
 501 00fa CB18     		add	r3, r1, r3
 502 00fc 1A70     		strb	r2, [r3]
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 503              		.loc 1 435 0
 504 00fe 3BE0     		b	.L23
 505              	.L20:
 443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)			
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			   && (sign == 0u)))
 453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			{
 454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
 455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 506              		.loc 1 456 0
 507 0100 3A1C     		mov	r2, r7
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 18


 508 0102 1232     		add	r2, r2, #18
 509 0104 3B1C     		mov	r3, r7
 510 0106 0C33     		add	r3, r3, #12
 511 0108 1288     		ldrh	r2, [r2]
 512 010a 1B88     		ldrh	r3, [r3]
 513 010c 9A42     		cmp	r2, r3
 514 010e 07D9     		bls	.L24
 515              		.loc 1 456 0 is_stmt 0 discriminator 1
 516 0110 3B1C     		mov	r3, r7
 517 0112 1233     		add	r3, r3, #18
 518 0114 1B88     		ldrh	r3, [r3]
 519 0116 132B     		cmp	r3, #19
 520 0118 2ED8     		bhi	.L23
 457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				   && (sign == 0u)))
 521              		.loc 1 458 0 is_stmt 1
 522 011a 7B69     		ldr	r3, [r7, #20]
 523 011c 002B     		cmp	r3, #0
 524 011e 2BD1     		bne	.L23
 525              	.L24:
 459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			{
 460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 526              		.loc 1 463 0
 527 0120 274B     		ldr	r3, .L27+16
 528 0122 7A68     		ldr	r2, [r7, #4]
 529 0124 5200     		lsl	r2, r2, #1
 530 0126 D35A     		ldrh	r3, [r2, r3]
 531 0128 1B02     		lsl	r3, r3, #8
 532 012a BB60     		str	r3, [r7, #8]
 464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 533              		.loc 1 464 0
 534 012c 274A     		ldr	r2, .L27+28
 535 012e 7B68     		ldr	r3, [r7, #4]
 536 0130 D318     		add	r3, r2, r3
 537 0132 1B78     		ldrb	r3, [r3]
 538 0134 BA68     		ldr	r2, [r7, #8]
 539 0136 1343     		orr	r3, r2
 540 0138 BB60     		str	r3, [r7, #8]
 465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 541              		.loc 1 467 0
 542 013a 3B1C     		mov	r3, r7
 543 013c 1033     		add	r3, r3, #16
 544 013e 1B88     		ldrh	r3, [r3]
 545 0140 BA68     		ldr	r2, [r7, #8]
 546 0142 D318     		add	r3, r2, r3
 547 0144 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 548              		.loc 1 470 0
 549 0146 1E4B     		ldr	r3, .L27+16
 550 0148 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 19


 551 014a 5200     		lsl	r2, r2, #1
 552 014c D35A     		ldrh	r3, [r2, r3]
 553 014e BA68     		ldr	r2, [r7, #8]
 554 0150 D31A     		sub	r3, r2, r3
 555 0152 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 556              		.loc 1 473 0
 557 0154 BB68     		ldr	r3, [r7, #8]
 558 0156 1B0A     		lsr	r3, r3, #8
 559 0158 99B2     		uxth	r1, r3
 560 015a 194B     		ldr	r3, .L27+16
 561 015c 7A68     		ldr	r2, [r7, #4]
 562 015e 5200     		lsl	r2, r2, #1
 563 0160 D152     		strh	r1, [r2, r3]
 474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 564              		.loc 1 474 0
 565 0162 BB68     		ldr	r3, [r7, #8]
 566 0164 DAB2     		uxtb	r2, r3
 567 0166 1949     		ldr	r1, .L27+28
 568 0168 7B68     		ldr	r3, [r7, #4]
 569 016a CB18     		add	r3, r1, r3
 570 016c 1A70     		strb	r2, [r3]
 475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 571              		.loc 1 476 0
 572 016e 154A     		ldr	r2, .L27+20
 573 0170 7B68     		ldr	r3, [r7, #4]
 574 0172 D318     		add	r3, r2, r3
 575 0174 0022     		mov	r2, #0
 576 0176 1A70     		strb	r2, [r3]
 577              	.L23:
 477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 578              		.loc 1 483 0
 579 0178 3A1C     		mov	r2, r7
 580 017a 1232     		add	r2, r2, #18
 581 017c 3B1C     		mov	r3, r7
 582 017e 0C33     		add	r3, r3, #12
 583 0180 1288     		ldrh	r2, [r2]
 584 0182 1B88     		ldrh	r3, [r3]
 585 0184 9A42     		cmp	r2, r3
 586 0186 0AD9     		bls	.L25
 587              		.loc 1 483 0 is_stmt 0 discriminator 1
 588 0188 7B69     		ldr	r3, [r7, #20]
 589 018a 002B     		cmp	r3, #0
 590 018c 07D0     		beq	.L25
 484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 20


 488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }    
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else 
 492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 591              		.loc 1 496 0 is_stmt 1
 592 018e 104B     		ldr	r3, .L27+32
 593 0190 7A68     		ldr	r2, [r7, #4]
 594 0192 5200     		lsl	r2, r2, #1
 595 0194 391C     		mov	r1, r7
 596 0196 1231     		add	r1, r1, #18
 597 0198 0988     		ldrh	r1, [r1]
 598 019a D152     		strh	r1, [r2, r3]
 599 019c 04E0     		b	.L16
 600              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 601              		.loc 1 502 0
 602 019e 0C4B     		ldr	r3, .L27+32
 603 01a0 7A68     		ldr	r2, [r7, #4]
 604 01a2 5200     		lsl	r2, r2, #1
 605 01a4 0021     		mov	r1, #0
 606 01a6 D152     		strh	r1, [r2, r3]
 607              	.L16:
 503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 608              		.loc 1 509 0
 609 01a8 BD46     		mov	sp, r7
 610 01aa 07B0     		add	sp, sp, #28
 611              		@ sp needed
 612 01ac 90BD     		pop	{r4, r7, pc}
 613              	.L28:
 614 01ae C046     		.align	2
 615              	.L27:
 616 01b0 00000000 		.word	CapSense_CSD_widgetNumber
 617 01b4 00000000 		.word	CapSense_CSD_sensorRaw
 618 01b8 00000000 		.word	CapSense_CSD_enableRawFilters
 619 01bc 00000000 		.word	CapSense_CSD_rawFilterData1
 620 01c0 00000000 		.word	CapSense_CSD_sensorBaseline
 621 01c4 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 622 01c8 00000000 		.word	CapSense_CSD_lowBaselineReset
 623 01cc 00000000 		.word	CapSense_CSD_sensorBaselineLow
 624 01d0 00000000 		.word	CapSense_CSD_sensorSignal
 625              		.cfi_endproc
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 21


 626              	.LFE37:
 627              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 628              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 629              		.align	2
 630              		.global	CapSense_CSD_UpdateSensorBaseline
 631              		.code	16
 632              		.thumb_func
 633              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 634              	CapSense_CSD_UpdateSensorBaseline:
 635              	.LFB38:
 510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor]. 
 521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 636              		.loc 1 543 0
 637              		.cfi_startproc
 638 0000 80B5     		push	{r7, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 82B0     		sub	sp, sp, #8
 643              		.cfi_def_cfa_offset 16
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint32 widget;
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 22


 546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
 547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		widget = CapSense_CSD_widgetNumber[sensor];
 548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     	CapSense_CSD_UpdateThresholds(sensor);
 556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 647              		.loc 1 558 0
 648 0008 7B68     		ldr	r3, [r7, #4]
 649 000a 181C     		mov	r0, r3
 650 000c FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 651              		.loc 1 564 0
 652 0010 BD46     		mov	sp, r7
 653 0012 02B0     		add	sp, sp, #8
 654              		@ sp needed
 655 0014 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE38:
 658              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 659 0016 C046     		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 660              		.align	2
 661              		.global	CapSense_CSD_UpdateEnabledBaselines
 662              		.code	16
 663              		.thumb_func
 664              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 665              	CapSense_CSD_UpdateEnabledBaselines:
 666              	.LFB39:
 565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 23


 583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 667              		.loc 1 597 0
 668              		.cfi_startproc
 669 0000 80B5     		push	{r7, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 82B0     		sub	sp, sp, #8
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 677              		.loc 1 601 0
 678 0006 0023     		mov	r3, #0
 679 0008 7B60     		str	r3, [r7, #4]
 680 000a 11E0     		b	.L31
 681              	.L33:
 602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 682              		.loc 1 603 0
 683 000c 0B4A     		ldr	r2, .L34
 684 000e 7B68     		ldr	r3, [r7, #4]
 685 0010 101C     		mov	r0, r2
 686 0012 191C     		mov	r1, r3
 687 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 688 0018 031C     		mov	r3, r0
 689 001a 3B60     		str	r3, [r7]
 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 690              		.loc 1 605 0
 691 001c 3B68     		ldr	r3, [r7]
 692 001e 002B     		cmp	r3, #0
 693 0020 03D0     		beq	.L32
 606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 694              		.loc 1 607 0
 695 0022 7B68     		ldr	r3, [r7, #4]
 696 0024 181C     		mov	r0, r3
 697 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 698              	.L32:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 24


 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 699              		.loc 1 601 0
 700 002a 7B68     		ldr	r3, [r7, #4]
 701 002c 0133     		add	r3, r3, #1
 702 002e 7B60     		str	r3, [r7, #4]
 703              	.L31:
 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 704              		.loc 1 601 0 is_stmt 0 discriminator 1
 705 0030 7B68     		ldr	r3, [r7, #4]
 706 0032 002B     		cmp	r3, #0
 707 0034 EAD0     		beq	.L33
 608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 708              		.loc 1 610 0 is_stmt 1
 709 0036 BD46     		mov	sp, r7
 710 0038 02B0     		add	sp, sp, #8
 711              		@ sp needed
 712 003a 80BD     		pop	{r7, pc}
 713              	.L35:
 714              		.align	2
 715              	.L34:
 716 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 717              		.cfi_endproc
 718              	.LFE39:
 719              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 720              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 721              		.align	2
 722              		.global	CapSense_CSD_UpdateWidgetBaseline
 723              		.code	16
 724              		.thumb_func
 725              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 726              	CapSense_CSD_UpdateWidgetBaseline:
 727              	.LFB40:
 611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 25


 634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 728              		.loc 1 642 0
 729              		.cfi_startproc
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 88B0     		sub	sp, sp, #32
 735              		.cfi_def_cfa_offset 40
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get number of sensors in widget */
 650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 739              		.loc 1 650 0
 740 0008 0123     		mov	r3, #1
 741 000a BB61     		str	r3, [r7, #24]
 651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get first sensor in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	firstSensor = CapSense_CSD_rawDataIndex[widget];
 742              		.loc 1 653 0
 743 000c 0023     		mov	r3, #0
 744 000e 7B61     		str	r3, [r7, #20]
 654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get last sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 745              		.loc 1 656 0
 746 0010 0023     		mov	r3, #0
 747 0012 1A1C     		mov	r2, r3
 748 0014 BB69     		ldr	r3, [r7, #24]
 749 0016 D318     		add	r3, r2, r3
 750 0018 3B61     		str	r3, [r7, #16]
 657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 751              		.loc 1 658 0
 752 001a 7B69     		ldr	r3, [r7, #20]
 753 001c FB61     		str	r3, [r7, #28]
 754 001e 11E0     		b	.L37
 755              	.L39:
 659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 756              		.loc 1 660 0
 757 0020 0C4A     		ldr	r2, .L40
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 26


 758 0022 FB69     		ldr	r3, [r7, #28]
 759 0024 101C     		mov	r0, r2
 760 0026 191C     		mov	r1, r3
 761 0028 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 762 002c 031C     		mov	r3, r0
 763 002e FB60     		str	r3, [r7, #12]
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 764              		.loc 1 662 0
 765 0030 FB68     		ldr	r3, [r7, #12]
 766 0032 002B     		cmp	r3, #0
 767 0034 03D0     		beq	.L38
 663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 768              		.loc 1 664 0
 769 0036 FB69     		ldr	r3, [r7, #28]
 770 0038 181C     		mov	r0, r3
 771 003a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 772              	.L38:
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 773              		.loc 1 658 0
 774 003e FB69     		ldr	r3, [r7, #28]
 775 0040 0133     		add	r3, r3, #1
 776 0042 FB61     		str	r3, [r7, #28]
 777              	.L37:
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 778              		.loc 1 658 0 is_stmt 0 discriminator 1
 779 0044 FA69     		ldr	r2, [r7, #28]
 780 0046 3B69     		ldr	r3, [r7, #16]
 781 0048 9A42     		cmp	r2, r3
 782 004a E9D3     		bcc	.L39
 665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 783              		.loc 1 667 0 is_stmt 1
 784 004c BD46     		mov	sp, r7
 785 004e 08B0     		add	sp, sp, #32
 786              		@ sp needed
 787 0050 80BD     		pop	{r7, pc}
 788              	.L41:
 789 0052 C046     		.align	2
 790              	.L40:
 791 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 792              		.cfi_endproc
 793              	.LFE40:
 794              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 795              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 796              		.align	2
 797              		.global	CapSense_CSD_GetBaselineData
 798              		.code	16
 799              		.thumb_func
 800              		.type	CapSense_CSD_GetBaselineData, %function
 801              	CapSense_CSD_GetBaselineData:
 802              	.LFB41:
 668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 27


 671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 803              		.loc 1 691 0
 804              		.cfi_startproc
 805 0000 80B5     		push	{r7, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 82B0     		sub	sp, sp, #8
 810              		.cfi_def_cfa_offset 16
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 7860     		str	r0, [r7, #4]
 692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_sensorBaseline[sensor]);
 814              		.loc 1 692 0
 815 0008 034B     		ldr	r3, .L44
 816 000a 7A68     		ldr	r2, [r7, #4]
 817 000c 5200     		lsl	r2, r2, #1
 818 000e D35A     		ldrh	r3, [r2, r3]
 693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 819              		.loc 1 693 0
 820 0010 181C     		mov	r0, r3
 821 0012 BD46     		mov	sp, r7
 822 0014 02B0     		add	sp, sp, #8
 823              		@ sp needed
 824 0016 80BD     		pop	{r7, pc}
 825              	.L45:
 826              		.align	2
 827              	.L44:
 828 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 829              		.cfi_endproc
 830              	.LFE41:
 831              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 832              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 833              		.align	2
 834              		.global	CapSense_CSD_SetBaselineData
 835              		.code	16
 836              		.thumb_func
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 28


 837              		.type	CapSense_CSD_SetBaselineData, %function
 838              	CapSense_CSD_SetBaselineData:
 839              	.LFB42:
 694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 840              		.loc 1 718 0
 841              		.cfi_startproc
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 851 0008 0A1C     		mov	r2, r1
 852 000a BB1C     		add	r3, r7, #2
 853 000c 1A80     		strh	r2, [r3]
 719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	CapSense_CSD_sensorBaseline[sensor] = data;
 854              		.loc 1 719 0
 855 000e 044B     		ldr	r3, .L47
 856 0010 7A68     		ldr	r2, [r7, #4]
 857 0012 5200     		lsl	r2, r2, #1
 858 0014 B91C     		add	r1, r7, #2
 859 0016 0988     		ldrh	r1, [r1]
 860 0018 D152     		strh	r1, [r2, r3]
 720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 861              		.loc 1 720 0
 862 001a BD46     		mov	sp, r7
 863 001c 02B0     		add	sp, sp, #8
 864              		@ sp needed
 865 001e 80BD     		pop	{r7, pc}
 866              	.L48:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 29


 867              		.align	2
 868              	.L47:
 869 0020 00000000 		.word	CapSense_CSD_sensorBaseline
 870              		.cfi_endproc
 871              	.LFE42:
 872              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 873              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 874              		.align	2
 875              		.global	CapSense_CSD_GetDiffCountData
 876              		.code	16
 877              		.thumb_func
 878              		.type	CapSense_CSD_GetDiffCountData, %function
 879              	CapSense_CSD_GetDiffCountData:
 880              	.LFB43:
 721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument. 
 736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetDiffCountData(uint32 sensor)
 745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 881              		.loc 1 745 0
 882              		.cfi_startproc
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 82B0     		sub	sp, sp, #8
 888              		.cfi_def_cfa_offset 16
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 891 0006 7860     		str	r0, [r7, #4]
 746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_sensorSignal[sensor]);
 892              		.loc 1 746 0
 893 0008 034B     		ldr	r3, .L51
 894 000a 7A68     		ldr	r2, [r7, #4]
 895 000c 5200     		lsl	r2, r2, #1
 896 000e D35A     		ldrh	r3, [r2, r3]
 747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 30


 897              		.loc 1 747 0
 898 0010 181C     		mov	r0, r3
 899 0012 BD46     		mov	sp, r7
 900 0014 02B0     		add	sp, sp, #8
 901              		@ sp needed
 902 0016 80BD     		pop	{r7, pc}
 903              	.L52:
 904              		.align	2
 905              	.L51:
 906 0018 00000000 		.word	CapSense_CSD_sensorSignal
 907              		.cfi_endproc
 908              	.LFE43:
 909              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 910              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 911              		.align	2
 912              		.global	CapSense_CSD_SetDiffCountData
 913              		.code	16
 914              		.thumb_func
 915              		.type	CapSense_CSD_SetDiffCountData, %function
 916              	CapSense_CSD_SetDiffCountData:
 917              	.LFB44:
 748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None. 
 763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint16 value)
 772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 918              		.loc 1 772 0
 919              		.cfi_startproc
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 31


 929 0008 0A1C     		mov	r2, r1
 930 000a BB1C     		add	r3, r7, #2
 931 000c 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 932              		.loc 1 773 0
 933 000e 044B     		ldr	r3, .L54
 934 0010 7A68     		ldr	r2, [r7, #4]
 935 0012 5200     		lsl	r2, r2, #1
 936 0014 B91C     		add	r1, r7, #2
 937 0016 0988     		ldrh	r1, [r1]
 938 0018 D152     		strh	r1, [r2, r3]
 774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 939              		.loc 1 774 0
 940 001a BD46     		mov	sp, r7
 941 001c 02B0     		add	sp, sp, #8
 942              		@ sp needed
 943 001e 80BD     		pop	{r7, pc}
 944              	.L55:
 945              		.align	2
 946              	.L54:
 947 0020 00000000 		.word	CapSense_CSD_sensorSignal
 948              		.cfi_endproc
 949              	.LFE44:
 950              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 951              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 952              		.align	2
 953              		.global	CapSense_CSD_GetFingerThreshold
 954              		.code	16
 955              		.thumb_func
 956              		.type	CapSense_CSD_GetFingerThreshold, %function
 957              	CapSense_CSD_GetFingerThreshold:
 958              	.LFB45:
 775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal 
 792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerThreshold(uint32 widget)
 799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 32


 959              		.loc 1 799 0
 960              		.cfi_startproc
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 82B0     		sub	sp, sp, #8
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_fingerThreshold[widget]);
 970              		.loc 1 800 0
 971 0008 3223     		mov	r3, #50
 801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 972              		.loc 1 801 0
 973 000a 181C     		mov	r0, r3
 974 000c BD46     		mov	sp, r7
 975 000e 02B0     		add	sp, sp, #8
 976              		@ sp needed
 977 0010 80BD     		pop	{r7, pc}
 978              		.cfi_endproc
 979              	.LFE45:
 980              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 981 0012 C046     		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 982              		.align	2
 983              		.global	CapSense_CSD_GetNoiseThreshold
 984              		.code	16
 985              		.thumb_func
 986              		.type	CapSense_CSD_GetNoiseThreshold, %function
 987              	CapSense_CSD_GetNoiseThreshold:
 988              	.LFB46:
 802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal 
 819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 33


 989              		.loc 1 826 0
 990              		.cfi_startproc
 991 0000 80B5     		push	{r7, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 82B0     		sub	sp, sp, #8
 996              		.cfi_def_cfa_offset 16
 997 0004 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 0006 7860     		str	r0, [r7, #4]
 827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_noiseThreshold[widget]);
 1000              		.loc 1 827 0
 1001 0008 0323     		mov	r3, #3
 828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1002              		.loc 1 828 0
 1003 000a 181C     		mov	r0, r3
 1004 000c BD46     		mov	sp, r7
 1005 000e 02B0     		add	sp, sp, #8
 1006              		@ sp needed
 1007 0010 80BD     		pop	{r7, pc}
 1008              		.cfi_endproc
 1009              	.LFE46:
 1010              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1011 0012 C046     		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1012              		.align	2
 1013              		.global	CapSense_CSD_GetFingerHysteresis
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1017              	CapSense_CSD_GetFingerHysteresis:
 1018              	.LFB47:
 829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value 
 846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerHysteresis(uint32 widget)
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 34


 854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1019              		.loc 1 854 0
 1020              		.cfi_startproc
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_hysteresis[widget]);
 1030              		.loc 1 855 0
 1031 0008 0A23     		mov	r3, #10
 856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1032              		.loc 1 856 0
 1033 000a 181C     		mov	r0, r3
 1034 000c BD46     		mov	sp, r7
 1035 000e 02B0     		add	sp, sp, #8
 1036              		@ sp needed
 1037 0010 80BD     		pop	{r7, pc}
 1038              		.cfi_endproc
 1039              	.LFE47:
 1040              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1041 0012 C046     		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1042              		.align	2
 1043              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1044              		.code	16
 1045              		.thumb_func
 1046              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1047              	CapSense_CSD_GetNegativeNoiseThreshold:
 1048              	.LFB48:
 857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters: 
 867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value: 
 870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative 
 874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 35


 881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1049              		.loc 1 882 0
 1050              		.cfi_startproc
 1051 0000 80B5     		push	{r7, lr}
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 82B0     		sub	sp, sp, #8
 1056              		.cfi_def_cfa_offset 16
 1057 0004 00AF     		add	r7, sp, #0
 1058              		.cfi_def_cfa_register 7
 1059 0006 7860     		str	r0, [r7, #4]
 883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_negativeNoiseThreshold[widget]);
 885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 1060              		.loc 1 886 0
 1061 0008 1423     		mov	r3, #20
 887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1062              		.loc 1 888 0
 1063 000a 181C     		mov	r0, r3
 1064 000c BD46     		mov	sp, r7
 1065 000e 02B0     		add	sp, sp, #8
 1066              		@ sp needed
 1067 0010 80BD     		pop	{r7, pc}
 1068              		.cfi_endproc
 1069              	.LFE48:
 1070              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1071 0012 C046     		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1072              		.align	2
 1073              		.global	CapSense_CSD_CheckIsSensorActive
 1074              		.code	16
 1075              		.thumb_func
 1076              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1077              	CapSense_CSD_CheckIsSensorActive:
 1078              	.LFB49:
 889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetFingerThreshold
 894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  sensorNumber:  widget index. 
 901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_fingerThreshold[] - This array contains the level of signal 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 36


 908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetFingerThreshold(uint32 widget, uint16 value)
 915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{	
 916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_fingerThreshold[widget] = value;
 917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetNoiseThreshold
 922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
 928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget:  Sensor index number.
 929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_noiseThreshold[] - This array contains the level of signal 
 936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint16 value)
 943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_noiseThreshold[widget] = value;
 945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetFingerHysteresis
 950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget:  widget number
 958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 37


 965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint16 value)
 971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_hysteresis[widget] = value;
 973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget: widget number
 986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative 
 992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   the raw count level.
 994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
1001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_negativeNoiseThreshold[widget] = value;
1002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
1003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
1006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetDebounce
1007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
1008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
1010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the debounce value for a widget.
1011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
1013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Debounce value for widget.
1014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget: widget index.
1015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
1017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 38


1022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
1024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
1027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
1029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_debounce[widget] = value;
1030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
1031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
1034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetLowBaselineReset
1035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
1036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
1038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
1041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value: low baseline reset threshold value.
1042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  sensor: Sensor index.
1043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
1045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update 
1049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  threshold value for each sensor.
1050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
1052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
1055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
1057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_lowBaselineReset[sensor] = value;
1058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
1059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
1071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 39


1079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between 
1084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce 
1086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
1091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {	
 1079              		.loc 1 1102 0
 1080              		.cfi_startproc
 1081 0000 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 0002 84B0     		sub	sp, sp, #16
 1086              		.cfi_def_cfa_offset 24
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
1103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 widget;
1104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 debounce;
1105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 debounceIndex;
1106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint16 fingerThreshold;
1108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint16 hysteresis;
1109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1090              		.loc 1 1112 0
 1091 0008 3B1C     		mov	r3, r7
 1092 000a 0F33     		add	r3, r3, #15
 1093 000c 3D49     		ldr	r1, .L73
 1094 000e 7A68     		ldr	r2, [r7, #4]
 1095 0010 8A18     		add	r2, r1, r2
 1096 0012 1278     		ldrb	r2, [r2]
 1097 0014 1A70     		strb	r2, [r3]
1113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1098              		.loc 1 1114 0
 1099 0016 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 40


 1100 0018 0C33     		add	r3, r3, #12
 1101 001a 3222     		mov	r2, #50
 1102 001c 1A80     		strh	r2, [r3]
1115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	hysteresis = CapSense_CSD_hysteresis[widget];
 1103              		.loc 1 1115 0
 1104 001e 3B1C     		mov	r3, r7
 1105 0020 0A33     		add	r3, r3, #10
 1106 0022 0A22     		mov	r2, #10
 1107 0024 1A80     		strh	r2, [r3]
1116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	debounce = CapSense_CSD_debounce[widget];	
 1108              		.loc 1 1116 0
 1109 0026 3B1C     		mov	r3, r7
 1110 0028 0933     		add	r3, r3, #9
 1111 002a 0222     		mov	r2, #2
 1112 002c 1A70     		strb	r2, [r3]
1117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    debounceIndex = widget;
 1113              		.loc 1 1118 0
 1114 002e 3B1C     		mov	r3, r7
 1115 0030 0833     		add	r3, r3, #8
 1116 0032 3A1C     		mov	r2, r7
 1117 0034 0F32     		add	r2, r2, #15
 1118 0036 1278     		ldrb	r2, [r2]
 1119 0038 1A70     		strb	r2, [r3]
1119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1120              		.loc 1 1122 0
 1121 003a 334A     		ldr	r2, .L73+4
 1122 003c 7B68     		ldr	r3, [r7, #4]
 1123 003e 101C     		mov	r0, r2
 1124 0040 191C     		mov	r1, r3
 1125 0042 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1126 0046 031C     		mov	r3, r0
 1127 0048 002B     		cmp	r3, #0
 1128 004a 1DD0     		beq	.L65
1123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1129              		.loc 1 1125 0
 1130 004c 2F4B     		ldr	r3, .L73+8
 1131 004e 7A68     		ldr	r2, [r7, #4]
 1132 0050 5200     		lsl	r2, r2, #1
 1133 0052 D35A     		ldrh	r3, [r2, r3]
 1134 0054 1A1C     		mov	r2, r3
 1135 0056 3B1C     		mov	r3, r7
 1136 0058 0C33     		add	r3, r3, #12
 1137 005a 1988     		ldrh	r1, [r3]
 1138 005c 3B1C     		mov	r3, r7
 1139 005e 0A33     		add	r3, r3, #10
 1140 0060 1B88     		ldrh	r3, [r3]
 1141 0062 CB1A     		sub	r3, r1, r3
 1142 0064 9A42     		cmp	r2, r3
 1143 0066 3DDA     		bge	.L67
1126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	   		CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 41


 1144              		.loc 1 1127 0
 1145 0068 274A     		ldr	r2, .L73+4
 1146 006a 7B68     		ldr	r3, [r7, #4]
 1147 006c 101C     		mov	r0, r2
 1148 006e 191C     		mov	r1, r3
 1149 0070 0022     		mov	r2, #0
 1150 0072 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1151              		.loc 1 1129 0
 1152 0076 3B1C     		mov	r3, r7
 1153 0078 0833     		add	r3, r3, #8
 1154 007a 1B78     		ldrb	r3, [r3]
 1155 007c 244A     		ldr	r2, .L73+12
 1156 007e 391C     		mov	r1, r7
 1157 0080 0931     		add	r1, r1, #9
 1158 0082 0978     		ldrb	r1, [r1]
 1159 0084 D154     		strb	r1, [r2, r3]
 1160 0086 2DE0     		b	.L67
 1161              	.L65:
1130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1162              		.loc 1 1135 0
 1163 0088 204B     		ldr	r3, .L73+8
 1164 008a 7A68     		ldr	r2, [r7, #4]
 1165 008c 5200     		lsl	r2, r2, #1
 1166 008e D35A     		ldrh	r3, [r2, r3]
 1167 0090 1A1C     		mov	r2, r3
 1168 0092 3B1C     		mov	r3, r7
 1169 0094 0C33     		add	r3, r3, #12
 1170 0096 1988     		ldrh	r1, [r3]
 1171 0098 3B1C     		mov	r3, r7
 1172 009a 0A33     		add	r3, r3, #10
 1173 009c 1B88     		ldrh	r3, [r3]
 1174 009e CB18     		add	r3, r1, r3
 1175 00a0 9A42     		cmp	r2, r3
 1176 00a2 17DB     		blt	.L68
1136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_debounceCounter[debounceIndex]--;
 1177              		.loc 1 1137 0
 1178 00a4 3B1C     		mov	r3, r7
 1179 00a6 0833     		add	r3, r3, #8
 1180 00a8 1B78     		ldrb	r3, [r3]
 1181 00aa 194A     		ldr	r2, .L73+12
 1182 00ac D25C     		ldrb	r2, [r2, r3]
 1183 00ae 013A     		sub	r2, r2, #1
 1184 00b0 D1B2     		uxtb	r1, r2
 1185 00b2 174A     		ldr	r2, .L73+12
 1186 00b4 D154     		strb	r1, [r2, r3]
1138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1187              		.loc 1 1139 0
 1188 00b6 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 42


 1189 00b8 0833     		add	r3, r3, #8
 1190 00ba 1B78     		ldrb	r3, [r3]
 1191 00bc 144A     		ldr	r2, .L73+12
 1192 00be D35C     		ldrb	r3, [r2, r3]
 1193 00c0 002B     		cmp	r3, #0
 1194 00c2 0FD1     		bne	.L67
1140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u); 
 1195              		.loc 1 1141 0
 1196 00c4 104A     		ldr	r2, .L73+4
 1197 00c6 7B68     		ldr	r3, [r7, #4]
 1198 00c8 101C     		mov	r0, r2
 1199 00ca 191C     		mov	r1, r3
 1200 00cc 0122     		mov	r2, #1
 1201 00ce FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1202 00d2 07E0     		b	.L67
 1203              	.L68:
1142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1204              		.loc 1 1147 0
 1205 00d4 3B1C     		mov	r3, r7
 1206 00d6 0833     		add	r3, r3, #8
 1207 00d8 1B78     		ldrb	r3, [r3]
 1208 00da 0D4A     		ldr	r2, .L73+12
 1209 00dc 391C     		mov	r1, r7
 1210 00de 0931     		add	r1, r1, #9
 1211 00e0 0978     		ldrb	r1, [r1]
 1212 00e2 D154     		strb	r1, [r2, r3]
 1213              	.L67:
1148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1214              		.loc 1 1151 0
 1215 00e4 084A     		ldr	r2, .L73+4
 1216 00e6 7B68     		ldr	r3, [r7, #4]
 1217 00e8 101C     		mov	r0, r2
 1218 00ea 191C     		mov	r1, r3
 1219 00ec FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1220 00f0 031C     		mov	r3, r0
 1221 00f2 002B     		cmp	r3, #0
 1222 00f4 01D0     		beq	.L70
 1223              		.loc 1 1151 0 is_stmt 0 discriminator 1
 1224 00f6 0123     		mov	r3, #1
 1225 00f8 00E0     		b	.L71
 1226              	.L70:
 1227              		.loc 1 1151 0 discriminator 2
 1228 00fa 0023     		mov	r3, #0
 1229              	.L71:
1152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1230              		.loc 1 1152 0 is_stmt 1 discriminator 3
 1231 00fc 181C     		mov	r0, r3
 1232 00fe BD46     		mov	sp, r7
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 43


 1233 0100 04B0     		add	sp, sp, #16
 1234              		@ sp needed
 1235 0102 80BD     		pop	{r7, pc}
 1236              	.L74:
 1237              		.align	2
 1238              	.L73:
 1239 0104 00000000 		.word	CapSense_CSD_widgetNumber
 1240 0108 00000000 		.word	CapSense_CSD_sensorOnMask
 1241 010c 00000000 		.word	CapSense_CSD_sensorSignal
 1242 0110 10000000 		.word	CapSense_CSD_debounceCounter
 1243              		.cfi_endproc
 1244              	.LFE49:
 1245              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1246              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1247              		.align	2
 1248              		.global	CapSense_CSD_CheckIsWidgetActive
 1249              		.code	16
 1250              		.thumb_func
 1251              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1252              	CapSense_CSD_CheckIsWidgetActive:
 1253              	.LFB50:
1153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount. 
1166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition. 
1167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1254              		.loc 1 1184 0
 1255              		.cfi_startproc
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 44


 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 86B0     		sub	sp, sp, #24
 1261              		.cfi_def_cfa_offset 32
 1262 0004 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 1264 0006 7860     		str	r0, [r7, #4]
1185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1265              		.loc 1 1185 0
 1266 0008 0023     		mov	r3, #0
 1267 000a 7B61     		str	r3, [r7, #20]
1186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1268              		.loc 1 1186 0
 1269 000c 0123     		mov	r3, #1
 1270 000e 1A1C     		mov	r2, r3
 1271 0010 7B69     		ldr	r3, [r7, #20]
 1272 0012 D318     		add	r3, r2, r3
 1273 0014 FB60     		str	r3, [r7, #12]
1187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1274              		.loc 1 1187 0
 1275 0016 0023     		mov	r3, #0
 1276 0018 3B61     		str	r3, [r7, #16]
 1277              	.L77:
1188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1278              		.loc 1 1192 0
 1279 001a 7B69     		ldr	r3, [r7, #20]
 1280 001c 181C     		mov	r0, r3
 1281 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1282 0022 031C     		mov	r3, r0
 1283 0024 002B     		cmp	r3, #0
 1284 0026 01D0     		beq	.L76
1193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1285              		.loc 1 1194 0
 1286 0028 0123     		mov	r3, #1
 1287 002a 3B61     		str	r3, [r7, #16]
 1288              	.L76:
1195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1289              		.loc 1 1196 0
 1290 002c 7B69     		ldr	r3, [r7, #20]
 1291 002e 0133     		add	r3, r3, #1
 1292 0030 7B61     		str	r3, [r7, #20]
1197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1293              		.loc 1 1198 0
 1294 0032 7A69     		ldr	r2, [r7, #20]
 1295 0034 FB68     		ldr	r3, [r7, #12]
 1296 0036 9A42     		cmp	r2, r3
 1297 0038 EFD3     		bcc	.L77
1199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 45


1202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1298              		.loc 1 1202 0
 1299 003a 3B69     		ldr	r3, [r7, #16]
1203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1300              		.loc 1 1203 0
 1301 003c 181C     		mov	r0, r3
 1302 003e BD46     		mov	sp, r7
 1303 0040 06B0     		add	sp, sp, #24
 1304              		@ sp needed
 1305 0042 80BD     		pop	{r7, pc}
 1306              		.cfi_endproc
 1307              	.LFE50:
 1308              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1309              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1310              		.align	2
 1311              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1315              	CapSense_CSD_CheckIsAnyWidgetActive:
 1316              	.LFB51:
1204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger 
1212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
1213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this 
1214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1317              		.loc 1 1230 0
 1318              		.cfi_startproc
 1319 0000 80B5     		push	{r7, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 82B0     		sub	sp, sp, #8
 1324              		.cfi_def_cfa_offset 16
 1325 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 46


 1326              		.cfi_def_cfa_register 7
1231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    uint32 i;
1233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1327              		.loc 1 1233 0
 1328 0006 0023     		mov	r3, #0
 1329 0008 3B60     		str	r3, [r7]
1234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1330              		.loc 1 1235 0
 1331 000a 0023     		mov	r3, #0
 1332 000c 7B60     		str	r3, [r7, #4]
 1333 000e 0BE0     		b	.L80
 1334              	.L82:
1236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1335              		.loc 1 1237 0
 1336 0010 7B68     		ldr	r3, [r7, #4]
 1337 0012 181C     		mov	r0, r3
 1338 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1339 0018 031C     		mov	r3, r0
 1340 001a 002B     		cmp	r3, #0
 1341 001c 01D0     		beq	.L81
1238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1342              		.loc 1 1239 0
 1343 001e 0123     		mov	r3, #1
 1344 0020 3B60     		str	r3, [r7]
 1345              	.L81:
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1346              		.loc 1 1235 0
 1347 0022 7B68     		ldr	r3, [r7, #4]
 1348 0024 0133     		add	r3, r3, #1
 1349 0026 7B60     		str	r3, [r7, #4]
 1350              	.L80:
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1351              		.loc 1 1235 0 is_stmt 0 discriminator 1
 1352 0028 7B68     		ldr	r3, [r7, #4]
 1353 002a 002B     		cmp	r3, #0
 1354 002c F0D0     		beq	.L82
1240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1355              		.loc 1 1245 0 is_stmt 1
 1356 002e 3B68     		ldr	r3, [r7]
1246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1357              		.loc 1 1246 0
 1358 0030 181C     		mov	r0, r3
 1359 0032 BD46     		mov	sp, r7
 1360 0034 02B0     		add	sp, sp, #8
 1361              		@ sp needed
 1362 0036 80BD     		pop	{r7, pc}
 1363              		.cfi_endproc
 1364              	.LFE51:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 47


 1365              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1366              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1367              		.align	2
 1368              		.global	CapSense_CSD_EnableWidget
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CapSense_CSD_EnableWidget, %function
 1372              	CapSense_CSD_EnableWidget:
 1373              	.LFB52:
1247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
1264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
1266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1374              		.loc 1 1277 0
 1375              		.cfi_startproc
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 84B0     		sub	sp, sp, #16
 1381              		.cfi_def_cfa_offset 24
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 7860     		str	r0, [r7, #4]
1278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1385              		.loc 1 1279 0
 1386 0008 3B1C     		mov	r3, r7
 1387 000a 0F33     		add	r3, r3, #15
 1388 000c 0022     		mov	r2, #0
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 48


 1389 000e 1A70     		strb	r2, [r3]
1280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1390              		.loc 1 1280 0
 1391 0010 0121     		mov	r1, #1
 1392 0012 3B1C     		mov	r3, r7
 1393 0014 0E33     		add	r3, r3, #14
 1394 0016 3A1C     		mov	r2, r7
 1395 0018 0F32     		add	r2, r2, #15
 1396 001a 1278     		ldrb	r2, [r2]
 1397 001c 8A18     		add	r2, r1, r2
 1398 001e 1A70     		strb	r2, [r3]
 1399              	.L85:
1281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1400              		.loc 1 1285 0 discriminator 1
 1401 0020 3B1C     		mov	r3, r7
 1402 0022 0F33     		add	r3, r3, #15
 1403 0024 1B78     		ldrb	r3, [r3]
 1404 0026 0C4A     		ldr	r2, .L86
 1405 0028 101C     		mov	r0, r2
 1406 002a 191C     		mov	r1, r3
 1407 002c 0122     		mov	r2, #1
 1408 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1409              		.loc 1 1286 0 discriminator 1
 1410 0032 3B1C     		mov	r3, r7
 1411 0034 0F33     		add	r3, r3, #15
 1412 0036 1A78     		ldrb	r2, [r3]
 1413 0038 3B1C     		mov	r3, r7
 1414 003a 0F33     		add	r3, r3, #15
 1415 003c 0132     		add	r2, r2, #1
 1416 003e 1A70     		strb	r2, [r3]
1287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1417              		.loc 1 1288 0 discriminator 1
 1418 0040 3A1C     		mov	r2, r7
 1419 0042 0F32     		add	r2, r2, #15
 1420 0044 3B1C     		mov	r3, r7
 1421 0046 0E33     		add	r3, r3, #14
 1422 0048 1278     		ldrb	r2, [r2]
 1423 004a 1B78     		ldrb	r3, [r3]
 1424 004c 9A42     		cmp	r2, r3
 1425 004e E7D3     		bcc	.L85
1289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1426              		.loc 1 1289 0
 1427 0050 BD46     		mov	sp, r7
 1428 0052 04B0     		add	sp, sp, #16
 1429              		@ sp needed
 1430 0054 80BD     		pop	{r7, pc}
 1431              	.L87:
 1432 0056 C046     		.align	2
 1433              	.L86:
 1434 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1435              		.cfi_endproc
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 49


 1436              	.LFE52:
 1437              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1438              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1439              		.align	2
 1440              		.global	CapSense_CSD_DisableWidget
 1441              		.code	16
 1442              		.thumb_func
 1443              		.type	CapSense_CSD_DisableWidget, %function
 1444              	CapSense_CSD_DisableWidget:
 1445              	.LFB53:
1290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
1307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
1309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1446              		.loc 1 1320 0
 1447              		.cfi_startproc
 1448 0000 80B5     		push	{r7, lr}
 1449              		.cfi_def_cfa_offset 8
 1450              		.cfi_offset 7, -8
 1451              		.cfi_offset 14, -4
 1452 0002 84B0     		sub	sp, sp, #16
 1453              		.cfi_def_cfa_offset 24
 1454 0004 00AF     		add	r7, sp, #0
 1455              		.cfi_def_cfa_register 7
 1456 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1457              		.loc 1 1321 0
 1458 0008 3B1C     		mov	r3, r7
 1459 000a 0F33     		add	r3, r3, #15
 1460 000c 0022     		mov	r2, #0
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 50


 1461 000e 1A70     		strb	r2, [r3]
1322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1462              		.loc 1 1322 0
 1463 0010 0121     		mov	r1, #1
 1464 0012 3B1C     		mov	r3, r7
 1465 0014 0E33     		add	r3, r3, #14
 1466 0016 3A1C     		mov	r2, r7
 1467 0018 0F32     		add	r2, r2, #15
 1468 001a 1278     		ldrb	r2, [r2]
 1469 001c 8A18     		add	r2, r1, r2
 1470 001e 1A70     		strb	r2, [r3]
 1471              	.L89:
1323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****    
1324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1472              		.loc 1 1328 0 discriminator 1
 1473 0020 3B1C     		mov	r3, r7
 1474 0022 0F33     		add	r3, r3, #15
 1475 0024 1B78     		ldrb	r3, [r3]
 1476 0026 0C4A     		ldr	r2, .L90
 1477 0028 101C     		mov	r0, r2
 1478 002a 191C     		mov	r1, r3
 1479 002c 0022     		mov	r2, #0
 1480 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1481              		.loc 1 1329 0 discriminator 1
 1482 0032 3B1C     		mov	r3, r7
 1483 0034 0F33     		add	r3, r3, #15
 1484 0036 1A78     		ldrb	r2, [r3]
 1485 0038 3B1C     		mov	r3, r7
 1486 003a 0F33     		add	r3, r3, #15
 1487 003c 0132     		add	r2, r2, #1
 1488 003e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1489              		.loc 1 1331 0 discriminator 1
 1490 0040 3A1C     		mov	r2, r7
 1491 0042 0F32     		add	r2, r2, #15
 1492 0044 3B1C     		mov	r3, r7
 1493 0046 0E33     		add	r3, r3, #14
 1494 0048 1278     		ldrb	r2, [r2]
 1495 004a 1B78     		ldrb	r3, [r3]
 1496 004c 9A42     		cmp	r2, r3
 1497 004e E7D3     		bcc	.L89
1332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1498              		.loc 1 1332 0
 1499 0050 BD46     		mov	sp, r7
 1500 0052 04B0     		add	sp, sp, #16
 1501              		@ sp needed
 1502 0054 80BD     		pop	{r7, pc}
 1503              	.L91:
 1504 0056 C046     		.align	2
 1505              	.L90:
 1506 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 51


 1507              		.cfi_endproc
 1508              	.LFE53:
 1509              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1510              		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 1511              		.align	2
 1512              		.global	CapSense_CSD_IIR4Filter
 1513              		.code	16
 1514              		.thumb_func
 1515              		.type	CapSense_CSD_IIR4Filter, %function
 1516              	CapSense_CSD_IIR4Filter:
 1517              	.LFB54:
1333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and 
1343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects: 
1363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_IS_DIPLEX_SLIDER)
1367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 *di
1368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#else 
1369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 52


1379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
1383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
1384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
1393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {          
1412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             
1421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++; 
1427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }            
1432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 53


1436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
1445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else                    
1453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }                    
1467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
1468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
1469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 } 
1481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
1483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {                      
1484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
1488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 54


1493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }    
1494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
1496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects: 
1521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else								
1528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)					
1530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		    static uint16 CapSense_CSD_centroid[3u];
1540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                
1542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 55


1550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint16  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
1552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
1554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      
1556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  
1565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }                    
1605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 56


1607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else                    
1612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
1618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 57


1664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
1675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
1679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
1680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }    
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 58


1721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
1745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		/* Find Maximum within centroid */      
1776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[widget], 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 59


1778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
1779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[widget]);
1780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 60


1835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }                                
1867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 61


1892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
1927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget]; 
1948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 62


1949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		/* Find Maximum within centroid */      
1963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[widget], 
1965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
1966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[widget]);
1967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
1970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  || 
1992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
2002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 63


2006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = 
2015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & 
2019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position, 
2028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & 
2045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & 
2056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position, 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 64


2063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found?? */
2077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
2078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
2089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number. 
2109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 65


2120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 66


2177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count, 
2179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
2181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count, 
2186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
2196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
2208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             
2219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
2232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 67


2234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
2256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY, 
2261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX, 
2276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY, 
2280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 68


2291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX, 
2308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         
2311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY, 
2312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 69


2348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function. 
2353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
2378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
2379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
2380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
2383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
2385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 70


2405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 71


2462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1518              		.loc 1 2492 0
 1519              		.cfi_startproc
 1520 0000 80B5     		push	{r7, lr}
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 7, -8
 1523              		.cfi_offset 14, -4
 1524 0002 84B0     		sub	sp, sp, #16
 1525              		.cfi_def_cfa_offset 24
 1526 0004 00AF     		add	r7, sp, #0
 1527              		.cfi_def_cfa_register 7
 1528 0006 0A1C     		mov	r2, r1
 1529 0008 BB1D     		add	r3, r7, #6
 1530 000a 011C     		add	r1, r0, #0
 1531 000c 1980     		strh	r1, [r3]
 1532 000e 3B1D     		add	r3, r7, #4
 1533 0010 1A80     		strh	r2, [r3]
2493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1534              		.loc 1 2496 0
 1535 0012 BB1D     		add	r3, r7, #6
 1536 0014 1A88     		ldrh	r2, [r3]
 1537 0016 3B1D     		add	r3, r7, #4
 1538 0018 1B88     		ldrh	r3, [r3]
 1539 001a D318     		add	r3, r2, r3
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 72


 1540 001c FB60     		str	r3, [r7, #12]
2497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1541              		.loc 1 2497 0
 1542 001e 3B1D     		add	r3, r7, #4
 1543 0020 1B88     		ldrh	r3, [r3]
 1544 0022 5B00     		lsl	r3, r3, #1
 1545 0024 FA68     		ldr	r2, [r7, #12]
 1546 0026 D318     		add	r3, r2, r3
 1547 0028 FB60     		str	r3, [r7, #12]
2498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 1548              		.loc 1 2498 0
 1549 002a FB68     		ldr	r3, [r7, #12]
 1550 002c 9B08     		lsr	r3, r3, #2
 1551 002e FB60     		str	r3, [r7, #12]
2499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 1552              		.loc 1 2500 0
 1553 0030 FB68     		ldr	r3, [r7, #12]
 1554 0032 9BB2     		uxth	r3, r3
2501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1555              		.loc 1 2501 0
 1556 0034 181C     		mov	r0, r3
 1557 0036 BD46     		mov	sp, r7
 1558 0038 04B0     		add	sp, sp, #16
 1559              		@ sp needed
 1560 003a 80BD     		pop	{r7, pc}
 1561              		.cfi_endproc
 1562              	.LFE54:
 1563              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 1564              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 1565              		.align	2
 1566              		.global	CapSense_CSD_GetWidgetNumber
 1567              		.code	16
 1568              		.thumb_func
 1569              		.type	CapSense_CSD_GetWidgetNumber, %function
 1570              	CapSense_CSD_GetWidgetNumber:
 1571              	.LFB55:
2502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))  
2510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 73


2522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
2536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
2540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
2542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
2546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	   *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 74


2579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 75


2636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of 
2651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  raw data and a previous value of the baseline.
2652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 76


2693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor. 
2716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
2720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1572              		.loc 1 2725 0
 1573              		.cfi_startproc
 1574 0000 80B5     		push	{r7, lr}
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
 1578 0002 82B0     		sub	sp, sp, #8
 1579              		.cfi_def_cfa_offset 16
 1580 0004 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 1582 0006 7860     		str	r0, [r7, #4]
2726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return((uint32)CapSense_CSD_widgetNumber[sensor]);
 1583              		.loc 1 2726 0
 1584 0008 034A     		ldr	r2, .L96
 1585 000a 7B68     		ldr	r3, [r7, #4]
 1586 000c D318     		add	r3, r2, r3
 1587 000e 1B78     		ldrb	r3, [r3]
2727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1588              		.loc 1 2727 0
 1589 0010 181C     		mov	r0, r3
 1590 0012 BD46     		mov	sp, r7
 1591 0014 02B0     		add	sp, sp, #8
 1592              		@ sp needed
 1593 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 77


 1594              	.L97:
 1595              		.align	2
 1596              	.L96:
 1597 0018 00000000 		.word	CapSense_CSD_widgetNumber
 1598              		.cfi_endproc
 1599              	.LFE55:
 1600              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 1601              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 1602              		.align	2
 1603              		.global	CapSense_CSD_GetLowBaselineReset
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	CapSense_CSD_GetLowBaselineReset, %function
 1607              	CapSense_CSD_GetLowBaselineReset:
 1608              	.LFB56:
2728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
2746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1609              		.loc 1 2751 0
 1610              		.cfi_startproc
 1611 0000 80B5     		push	{r7, lr}
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 82B0     		sub	sp, sp, #8
 1616              		.cfi_def_cfa_offset 16
 1617 0004 00AF     		add	r7, sp, #0
 1618              		.cfi_def_cfa_register 7
 1619 0006 7860     		str	r0, [r7, #4]
2752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_lowBaselineReset[sensor]);
 1620              		.loc 1 2752 0
 1621 0008 034A     		ldr	r2, .L100
 1622 000a 7B68     		ldr	r3, [r7, #4]
 1623 000c D318     		add	r3, r2, r3
 1624 000e 1B78     		ldrb	r3, [r3]
2753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 78


 1625              		.loc 1 2753 0
 1626 0010 181C     		mov	r0, r3
 1627 0012 BD46     		mov	sp, r7
 1628 0014 02B0     		add	sp, sp, #8
 1629              		@ sp needed
 1630 0016 80BD     		pop	{r7, pc}
 1631              	.L101:
 1632              		.align	2
 1633              	.L100:
 1634 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 1635              		.cfi_endproc
 1636              	.LFE56:
 1637              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 1638              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 1639              		.align	2
 1640              		.global	CapSense_CSD_GetDebounce
 1641              		.code	16
 1642              		.thumb_func
 1643              		.type	CapSense_CSD_GetDebounce, %function
 1644              	CapSense_CSD_GetDebounce:
 1645              	.LFB57:
2754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value 
2768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
2772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1646              		.loc 1 2777 0
 1647              		.cfi_startproc
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 82B0     		sub	sp, sp, #8
 1653              		.cfi_def_cfa_offset 16
 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
 1656 0006 7860     		str	r0, [r7, #4]
2778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_debounce[widget]);
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 79


 1657              		.loc 1 2778 0
 1658 0008 0223     		mov	r3, #2
2779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1659              		.loc 1 2779 0
 1660 000a 181C     		mov	r0, r3
 1661 000c BD46     		mov	sp, r7
 1662 000e 02B0     		add	sp, sp, #8
 1663              		@ sp needed
 1664 0010 80BD     		pop	{r7, pc}
 1665              		.cfi_endproc
 1666              	.LFE57:
 1667              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 1668 0012 C046     		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 1669              		.align	2
 1670              		.global	CapSense_CSD_EnableRawDataFilters
 1671              		.code	16
 1672              		.thumb_func
 1673              		.type	CapSense_CSD_EnableRawDataFilters, %function
 1674              	CapSense_CSD_EnableRawDataFilters:
 1675              	.LFB58:
2780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
2783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_EnableRawDataFilters
2784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
2785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
2787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
2790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return:
2793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
2802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_EnableRawDataFilters(void)
2803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1676              		.loc 1 2803 0
 1677              		.cfi_startproc
 1678 0000 80B5     		push	{r7, lr}
 1679              		.cfi_def_cfa_offset 8
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 00AF     		add	r7, sp, #0
 1683              		.cfi_def_cfa_register 7
2804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 1684              		.loc 1 2804 0
 1685 0004 024B     		ldr	r3, .L105
 1686 0006 0122     		mov	r2, #1
 1687 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 80


2805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1688              		.loc 1 2805 0
 1689 000a BD46     		mov	sp, r7
 1690              		@ sp needed
 1691 000c 80BD     		pop	{r7, pc}
 1692              	.L106:
 1693 000e C046     		.align	2
 1694              	.L105:
 1695 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 1696              		.cfi_endproc
 1697              	.LFE58:
 1698              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 1699              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 1700              		.align	2
 1701              		.global	CapSense_CSD_DisableRawDataFilters
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	CapSense_CSD_DisableRawDataFilters, %function
 1705              	CapSense_CSD_DisableRawDataFilters:
 1706              	.LFB59:
2806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
2808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_DisableRawDataFilters
2809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
2810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
2812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
2815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return:
2818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
2827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_DisableRawDataFilters(void)
2828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1707              		.loc 1 2828 0
 1708              		.cfi_startproc
 1709 0000 80B5     		push	{r7, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 7, -8
 1712              		.cfi_offset 14, -4
 1713 0002 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
2829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 1715              		.loc 1 2829 0
 1716 0004 024B     		ldr	r3, .L108
 1717 0006 0022     		mov	r2, #0
 1718 0008 1A70     		strb	r2, [r3]
2830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 81


 1719              		.loc 1 2830 0
 1720 000a BD46     		mov	sp, r7
 1721              		@ sp needed
 1722 000c 80BD     		pop	{r7, pc}
 1723              	.L109:
 1724 000e C046     		.align	2
 1725              	.L108:
 1726 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 1727              		.cfi_endproc
 1728              	.LFE59:
 1729              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 1730              		.text
 1731              	.Letext0:
 1732              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1733              		.section	.debug_info,"",%progbits
 1734              	.Ldebug_info0:
 1735 0000 E4070000 		.4byte	0x7e4
 1736 0004 0400     		.2byte	0x4
 1737 0006 00000000 		.4byte	.Ldebug_abbrev0
 1738 000a 04       		.byte	0x4
 1739 000b 01       		.uleb128 0x1
 1740 000c C1030000 		.4byte	.LASF81
 1741 0010 01       		.byte	0x1
 1742 0011 70030000 		.4byte	.LASF82
 1743 0015 02050000 		.4byte	.LASF83
 1744 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1745 001d 00000000 		.4byte	0
 1746 0021 00000000 		.4byte	.Ldebug_line0
 1747 0025 02       		.uleb128 0x2
 1748 0026 01       		.byte	0x1
 1749 0027 06       		.byte	0x6
 1750 0028 E3000000 		.4byte	.LASF0
 1751 002c 02       		.uleb128 0x2
 1752 002d 01       		.byte	0x1
 1753 002e 08       		.byte	0x8
 1754 002f 9C040000 		.4byte	.LASF1
 1755 0033 02       		.uleb128 0x2
 1756 0034 02       		.byte	0x2
 1757 0035 05       		.byte	0x5
 1758 0036 D0040000 		.4byte	.LASF2
 1759 003a 02       		.uleb128 0x2
 1760 003b 02       		.byte	0x2
 1761 003c 07       		.byte	0x7
 1762 003d 96020000 		.4byte	.LASF3
 1763 0041 02       		.uleb128 0x2
 1764 0042 04       		.byte	0x4
 1765 0043 05       		.byte	0x5
 1766 0044 40010000 		.4byte	.LASF4
 1767 0048 02       		.uleb128 0x2
 1768 0049 04       		.byte	0x4
 1769 004a 07       		.byte	0x7
 1770 004b 47020000 		.4byte	.LASF5
 1771 004f 02       		.uleb128 0x2
 1772 0050 08       		.byte	0x8
 1773 0051 05       		.byte	0x5
 1774 0052 D5000000 		.4byte	.LASF6
 1775 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 82


 1776 0057 08       		.byte	0x8
 1777 0058 07       		.byte	0x7
 1778 0059 A6000000 		.4byte	.LASF7
 1779 005d 03       		.uleb128 0x3
 1780 005e 04       		.byte	0x4
 1781 005f 05       		.byte	0x5
 1782 0060 696E7400 		.ascii	"int\000"
 1783 0064 02       		.uleb128 0x2
 1784 0065 04       		.byte	0x4
 1785 0066 07       		.byte	0x7
 1786 0067 3A020000 		.4byte	.LASF8
 1787 006b 04       		.uleb128 0x4
 1788 006c 7C010000 		.4byte	.LASF9
 1789 0070 02       		.byte	0x2
 1790 0071 A1       		.byte	0xa1
 1791 0072 2C000000 		.4byte	0x2c
 1792 0076 04       		.uleb128 0x4
 1793 0077 1D000000 		.4byte	.LASF10
 1794 007b 02       		.byte	0x2
 1795 007c A2       		.byte	0xa2
 1796 007d 3A000000 		.4byte	0x3a
 1797 0081 04       		.uleb128 0x4
 1798 0082 DE010000 		.4byte	.LASF11
 1799 0086 02       		.byte	0x2
 1800 0087 A3       		.byte	0xa3
 1801 0088 48000000 		.4byte	0x48
 1802 008c 02       		.uleb128 0x2
 1803 008d 04       		.byte	0x4
 1804 008e 04       		.byte	0x4
 1805 008f BB030000 		.4byte	.LASF12
 1806 0093 02       		.uleb128 0x2
 1807 0094 08       		.byte	0x8
 1808 0095 04       		.byte	0x4
 1809 0096 98010000 		.4byte	.LASF13
 1810 009a 02       		.uleb128 0x2
 1811 009b 01       		.byte	0x1
 1812 009c 08       		.byte	0x8
 1813 009d 07060000 		.4byte	.LASF14
 1814 00a1 02       		.uleb128 0x2
 1815 00a2 04       		.byte	0x4
 1816 00a3 07       		.byte	0x7
 1817 00a4 3F030000 		.4byte	.LASF15
 1818 00a8 05       		.uleb128 0x5
 1819 00a9 F0010000 		.4byte	.LASF16
 1820 00ad 01       		.byte	0x1
 1821 00ae 8A       		.byte	0x8a
 1822 00af 00000000 		.4byte	.LFB33
 1823 00b3 78000000 		.4byte	.LFE33-.LFB33
 1824 00b7 01       		.uleb128 0x1
 1825 00b8 9C       		.byte	0x9c
 1826 00b9 DA000000 		.4byte	0xda
 1827 00bd 06       		.uleb128 0x6
 1828 00be ED020000 		.4byte	.LASF18
 1829 00c2 01       		.byte	0x1
 1830 00c3 8A       		.byte	0x8a
 1831 00c4 81000000 		.4byte	0x81
 1832 00c8 02       		.uleb128 0x2
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 83


 1833 00c9 91       		.byte	0x91
 1834 00ca 6C       		.sleb128 -20
 1835 00cb 07       		.uleb128 0x7
 1836 00cc DA040000 		.4byte	.LASF20
 1837 00d0 01       		.byte	0x1
 1838 00d1 8E       		.byte	0x8e
 1839 00d2 6B000000 		.4byte	0x6b
 1840 00d6 02       		.uleb128 0x2
 1841 00d7 91       		.byte	0x91
 1842 00d8 77       		.sleb128 -9
 1843 00d9 00       		.byte	0
 1844 00da 08       		.uleb128 0x8
 1845 00db 62000000 		.4byte	.LASF17
 1846 00df 01       		.byte	0x1
 1847 00e0 D6       		.byte	0xd6
 1848 00e1 00000000 		.4byte	.LFB34
 1849 00e5 2A000000 		.4byte	.LFE34-.LFB34
 1850 00e9 01       		.uleb128 0x1
 1851 00ea 9C       		.byte	0x9c
 1852 00eb FE000000 		.4byte	0xfe
 1853 00ef 06       		.uleb128 0x6
 1854 00f0 ED020000 		.4byte	.LASF18
 1855 00f4 01       		.byte	0x1
 1856 00f5 D6       		.byte	0xd6
 1857 00f6 81000000 		.4byte	0x81
 1858 00fa 02       		.uleb128 0x2
 1859 00fb 91       		.byte	0x91
 1860 00fc 74       		.sleb128 -12
 1861 00fd 00       		.byte	0
 1862 00fe 08       		.uleb128 0x8
 1863 00ff 3D040000 		.4byte	.LASF19
 1864 0103 01       		.byte	0x1
 1865 0104 FB       		.byte	0xfb
 1866 0105 00000000 		.4byte	.LFB35
 1867 0109 26000000 		.4byte	.LFE35-.LFB35
 1868 010d 01       		.uleb128 0x1
 1869 010e 9C       		.byte	0x9c
 1870 010f 20010000 		.4byte	0x120
 1871 0113 09       		.uleb128 0x9
 1872 0114 6900     		.ascii	"i\000"
 1873 0116 01       		.byte	0x1
 1874 0117 FD       		.byte	0xfd
 1875 0118 81000000 		.4byte	0x81
 1876 011c 02       		.uleb128 0x2
 1877 011d 91       		.byte	0x91
 1878 011e 74       		.sleb128 -12
 1879 011f 00       		.byte	0
 1880 0120 0A       		.uleb128 0xa
 1881 0121 48030000 		.4byte	.LASF21
 1882 0125 01       		.byte	0x1
 1883 0126 1E01     		.2byte	0x11e
 1884 0128 00000000 		.4byte	.LFB36
 1885 012c 50000000 		.4byte	.LFE36-.LFB36
 1886 0130 01       		.uleb128 0x1
 1887 0131 9C       		.byte	0x9c
 1888 0132 53010000 		.4byte	0x153
 1889 0136 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 84


 1890 0137 6900     		.ascii	"i\000"
 1891 0139 01       		.byte	0x1
 1892 013a 2001     		.2byte	0x120
 1893 013c 81000000 		.4byte	0x81
 1894 0140 02       		.uleb128 0x2
 1895 0141 91       		.byte	0x91
 1896 0142 74       		.sleb128 -12
 1897 0143 0C       		.uleb128 0xc
 1898 0144 6C050000 		.4byte	.LASF22
 1899 0148 01       		.byte	0x1
 1900 0149 2101     		.2byte	0x121
 1901 014b 81000000 		.4byte	0x81
 1902 014f 02       		.uleb128 0x2
 1903 0150 91       		.byte	0x91
 1904 0151 70       		.sleb128 -16
 1905 0152 00       		.byte	0
 1906 0153 0A       		.uleb128 0xa
 1907 0154 1F070000 		.4byte	.LASF23
 1908 0158 01       		.byte	0x1
 1909 0159 5F01     		.2byte	0x15f
 1910 015b 00000000 		.4byte	.LFB37
 1911 015f D4010000 		.4byte	.LFE37-.LFB37
 1912 0163 01       		.uleb128 0x1
 1913 0164 9C       		.byte	0x9c
 1914 0165 D3010000 		.4byte	0x1d3
 1915 0169 0D       		.uleb128 0xd
 1916 016a ED020000 		.4byte	.LASF18
 1917 016e 01       		.byte	0x1
 1918 016f 5F01     		.2byte	0x15f
 1919 0171 81000000 		.4byte	0x81
 1920 0175 02       		.uleb128 0x2
 1921 0176 91       		.byte	0x91
 1922 0177 5C       		.sleb128 -36
 1923 0178 0C       		.uleb128 0xc
 1924 0179 10030000 		.4byte	.LASF24
 1925 017d 01       		.byte	0x1
 1926 017e 6101     		.2byte	0x161
 1927 0180 81000000 		.4byte	0x81
 1928 0184 02       		.uleb128 0x2
 1929 0185 91       		.byte	0x91
 1930 0186 60       		.sleb128 -32
 1931 0187 0C       		.uleb128 0xc
 1932 0188 46070000 		.4byte	.LASF25
 1933 018c 01       		.byte	0x1
 1934 018d 6201     		.2byte	0x162
 1935 018f 81000000 		.4byte	0x81
 1936 0193 02       		.uleb128 0x2
 1937 0194 91       		.byte	0x91
 1938 0195 6C       		.sleb128 -20
 1939 0196 0C       		.uleb128 0xc
 1940 0197 91070000 		.4byte	.LASF26
 1941 019b 01       		.byte	0x1
 1942 019c 6301     		.2byte	0x163
 1943 019e 76000000 		.4byte	0x76
 1944 01a2 02       		.uleb128 0x2
 1945 01a3 91       		.byte	0x91
 1946 01a4 6A       		.sleb128 -22
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 85


 1947 01a5 0C       		.uleb128 0xc
 1948 01a6 24000000 		.4byte	.LASF27
 1949 01aa 01       		.byte	0x1
 1950 01ab 6401     		.2byte	0x164
 1951 01ad 76000000 		.4byte	0x76
 1952 01b1 02       		.uleb128 0x2
 1953 01b2 91       		.byte	0x91
 1954 01b3 68       		.sleb128 -24
 1955 01b4 0C       		.uleb128 0xc
 1956 01b5 DA040000 		.4byte	.LASF20
 1957 01b9 01       		.byte	0x1
 1958 01ba 6501     		.2byte	0x165
 1959 01bc 6B000000 		.4byte	0x6b
 1960 01c0 02       		.uleb128 0x2
 1961 01c1 91       		.byte	0x91
 1962 01c2 67       		.sleb128 -25
 1963 01c3 0C       		.uleb128 0xc
 1964 01c4 C1040000 		.4byte	.LASF28
 1965 01c8 01       		.byte	0x1
 1966 01c9 6601     		.2byte	0x166
 1967 01cb 76000000 		.4byte	0x76
 1968 01cf 02       		.uleb128 0x2
 1969 01d0 91       		.byte	0x91
 1970 01d1 64       		.sleb128 -28
 1971 01d2 00       		.byte	0
 1972 01d3 0A       		.uleb128 0xa
 1973 01d4 8D050000 		.4byte	.LASF29
 1974 01d8 01       		.byte	0x1
 1975 01d9 1E02     		.2byte	0x21e
 1976 01db 00000000 		.4byte	.LFB38
 1977 01df 16000000 		.4byte	.LFE38-.LFB38
 1978 01e3 01       		.uleb128 0x1
 1979 01e4 9C       		.byte	0x9c
 1980 01e5 F9010000 		.4byte	0x1f9
 1981 01e9 0D       		.uleb128 0xd
 1982 01ea ED020000 		.4byte	.LASF18
 1983 01ee 01       		.byte	0x1
 1984 01ef 1E02     		.2byte	0x21e
 1985 01f1 81000000 		.4byte	0x81
 1986 01f5 02       		.uleb128 0x2
 1987 01f6 91       		.byte	0x91
 1988 01f7 74       		.sleb128 -12
 1989 01f8 00       		.byte	0
 1990 01f9 0A       		.uleb128 0xa
 1991 01fa 26060000 		.4byte	.LASF30
 1992 01fe 01       		.byte	0x1
 1993 01ff 5402     		.2byte	0x254
 1994 0201 00000000 		.4byte	.LFB39
 1995 0205 40000000 		.4byte	.LFE39-.LFB39
 1996 0209 01       		.uleb128 0x1
 1997 020a 9C       		.byte	0x9c
 1998 020b 2C020000 		.4byte	0x22c
 1999 020f 0B       		.uleb128 0xb
 2000 0210 6900     		.ascii	"i\000"
 2001 0212 01       		.byte	0x1
 2002 0213 5602     		.2byte	0x256
 2003 0215 81000000 		.4byte	0x81
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 86


 2004 0219 02       		.uleb128 0x2
 2005 021a 91       		.byte	0x91
 2006 021b 74       		.sleb128 -12
 2007 021c 0C       		.uleb128 0xc
 2008 021d 6C050000 		.4byte	.LASF22
 2009 0221 01       		.byte	0x1
 2010 0222 5702     		.2byte	0x257
 2011 0224 81000000 		.4byte	0x81
 2012 0228 02       		.uleb128 0x2
 2013 0229 91       		.byte	0x91
 2014 022a 70       		.sleb128 -16
 2015 022b 00       		.byte	0
 2016 022c 0A       		.uleb128 0xa
 2017 022d B8060000 		.4byte	.LASF31
 2018 0231 01       		.byte	0x1
 2019 0232 8102     		.2byte	0x281
 2020 0234 00000000 		.4byte	.LFB40
 2021 0238 58000000 		.4byte	.LFE40-.LFB40
 2022 023c 01       		.uleb128 0x1
 2023 023d 9C       		.byte	0x9c
 2024 023e 9B020000 		.4byte	0x29b
 2025 0242 0D       		.uleb128 0xd
 2026 0243 DA040000 		.4byte	.LASF20
 2027 0247 01       		.byte	0x1
 2028 0248 8102     		.2byte	0x281
 2029 024a 81000000 		.4byte	0x81
 2030 024e 02       		.uleb128 0x2
 2031 024f 91       		.byte	0x91
 2032 0250 5C       		.sleb128 -36
 2033 0251 0C       		.uleb128 0xc
 2034 0252 7C050000 		.4byte	.LASF32
 2035 0256 01       		.byte	0x1
 2036 0257 8302     		.2byte	0x283
 2037 0259 81000000 		.4byte	0x81
 2038 025d 02       		.uleb128 0x2
 2039 025e 91       		.byte	0x91
 2040 025f 70       		.sleb128 -16
 2041 0260 0C       		.uleb128 0xc
 2042 0261 4A060000 		.4byte	.LASF33
 2043 0265 01       		.byte	0x1
 2044 0266 8402     		.2byte	0x284
 2045 0268 81000000 		.4byte	0x81
 2046 026c 02       		.uleb128 0x2
 2047 026d 91       		.byte	0x91
 2048 026e 6C       		.sleb128 -20
 2049 026f 0C       		.uleb128 0xc
 2050 0270 2F020000 		.4byte	.LASF34
 2051 0274 01       		.byte	0x1
 2052 0275 8502     		.2byte	0x285
 2053 0277 81000000 		.4byte	0x81
 2054 027b 02       		.uleb128 0x2
 2055 027c 91       		.byte	0x91
 2056 027d 68       		.sleb128 -24
 2057 027e 0B       		.uleb128 0xb
 2058 027f 6900     		.ascii	"i\000"
 2059 0281 01       		.byte	0x1
 2060 0282 8602     		.2byte	0x286
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 87


 2061 0284 81000000 		.4byte	0x81
 2062 0288 02       		.uleb128 0x2
 2063 0289 91       		.byte	0x91
 2064 028a 74       		.sleb128 -12
 2065 028b 0C       		.uleb128 0xc
 2066 028c 6C050000 		.4byte	.LASF22
 2067 0290 01       		.byte	0x1
 2068 0291 8702     		.2byte	0x287
 2069 0293 81000000 		.4byte	0x81
 2070 0297 02       		.uleb128 0x2
 2071 0298 91       		.byte	0x91
 2072 0299 64       		.sleb128 -28
 2073 029a 00       		.byte	0
 2074 029b 0E       		.uleb128 0xe
 2075 029c C1010000 		.4byte	.LASF37
 2076 02a0 01       		.byte	0x1
 2077 02a1 B202     		.2byte	0x2b2
 2078 02a3 76000000 		.4byte	0x76
 2079 02a7 00000000 		.4byte	.LFB41
 2080 02ab 1C000000 		.4byte	.LFE41-.LFB41
 2081 02af 01       		.uleb128 0x1
 2082 02b0 9C       		.byte	0x9c
 2083 02b1 C5020000 		.4byte	0x2c5
 2084 02b5 0D       		.uleb128 0xd
 2085 02b6 ED020000 		.4byte	.LASF18
 2086 02ba 01       		.byte	0x1
 2087 02bb B202     		.2byte	0x2b2
 2088 02bd 81000000 		.4byte	0x81
 2089 02c1 02       		.uleb128 0x2
 2090 02c2 91       		.byte	0x91
 2091 02c3 74       		.sleb128 -12
 2092 02c4 00       		.byte	0
 2093 02c5 0F       		.uleb128 0xf
 2094 02c6 4F050000 		.4byte	.LASF35
 2095 02ca 01       		.byte	0x1
 2096 02cb CD02     		.2byte	0x2cd
 2097 02cd 00000000 		.4byte	.LFB42
 2098 02d1 24000000 		.4byte	.LFE42-.LFB42
 2099 02d5 01       		.uleb128 0x1
 2100 02d6 9C       		.byte	0x9c
 2101 02d7 FA020000 		.4byte	0x2fa
 2102 02db 0D       		.uleb128 0xd
 2103 02dc ED020000 		.4byte	.LASF18
 2104 02e0 01       		.byte	0x1
 2105 02e1 CD02     		.2byte	0x2cd
 2106 02e3 81000000 		.4byte	0x81
 2107 02e7 02       		.uleb128 0x2
 2108 02e8 91       		.byte	0x91
 2109 02e9 74       		.sleb128 -12
 2110 02ea 0D       		.uleb128 0xd
 2111 02eb 91020000 		.4byte	.LASF36
 2112 02ef 01       		.byte	0x1
 2113 02f0 CD02     		.2byte	0x2cd
 2114 02f2 76000000 		.4byte	0x76
 2115 02f6 02       		.uleb128 0x2
 2116 02f7 91       		.byte	0x91
 2117 02f8 72       		.sleb128 -14
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 88


 2118 02f9 00       		.byte	0
 2119 02fa 0E       		.uleb128 0xe
 2120 02fb 61040000 		.4byte	.LASF38
 2121 02ff 01       		.byte	0x1
 2122 0300 E802     		.2byte	0x2e8
 2123 0302 76000000 		.4byte	0x76
 2124 0306 00000000 		.4byte	.LFB43
 2125 030a 1C000000 		.4byte	.LFE43-.LFB43
 2126 030e 01       		.uleb128 0x1
 2127 030f 9C       		.byte	0x9c
 2128 0310 24030000 		.4byte	0x324
 2129 0314 0D       		.uleb128 0xd
 2130 0315 ED020000 		.4byte	.LASF18
 2131 0319 01       		.byte	0x1
 2132 031a E802     		.2byte	0x2e8
 2133 031c 81000000 		.4byte	0x81
 2134 0320 02       		.uleb128 0x2
 2135 0321 91       		.byte	0x91
 2136 0322 74       		.sleb128 -12
 2137 0323 00       		.byte	0
 2138 0324 0F       		.uleb128 0xf
 2139 0325 88000000 		.4byte	.LASF39
 2140 0329 01       		.byte	0x1
 2141 032a 0303     		.2byte	0x303
 2142 032c 00000000 		.4byte	.LFB44
 2143 0330 24000000 		.4byte	.LFE44-.LFB44
 2144 0334 01       		.uleb128 0x1
 2145 0335 9C       		.byte	0x9c
 2146 0336 59030000 		.4byte	0x359
 2147 033a 0D       		.uleb128 0xd
 2148 033b ED020000 		.4byte	.LASF18
 2149 033f 01       		.byte	0x1
 2150 0340 0303     		.2byte	0x303
 2151 0342 81000000 		.4byte	0x81
 2152 0346 02       		.uleb128 0x2
 2153 0347 91       		.byte	0x91
 2154 0348 74       		.sleb128 -12
 2155 0349 0D       		.uleb128 0xd
 2156 034a 29020000 		.4byte	.LASF40
 2157 034e 01       		.byte	0x1
 2158 034f 0303     		.2byte	0x303
 2159 0351 76000000 		.4byte	0x76
 2160 0355 02       		.uleb128 0x2
 2161 0356 91       		.byte	0x91
 2162 0357 72       		.sleb128 -14
 2163 0358 00       		.byte	0
 2164 0359 0E       		.uleb128 0xe
 2165 035a 98060000 		.4byte	.LASF41
 2166 035e 01       		.byte	0x1
 2167 035f 1E03     		.2byte	0x31e
 2168 0361 76000000 		.4byte	0x76
 2169 0365 00000000 		.4byte	.LFB45
 2170 0369 12000000 		.4byte	.LFE45-.LFB45
 2171 036d 01       		.uleb128 0x1
 2172 036e 9C       		.byte	0x9c
 2173 036f 83030000 		.4byte	0x383
 2174 0373 0D       		.uleb128 0xd
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 89


 2175 0374 DA040000 		.4byte	.LASF20
 2176 0378 01       		.byte	0x1
 2177 0379 1E03     		.2byte	0x31e
 2178 037b 81000000 		.4byte	0x81
 2179 037f 02       		.uleb128 0x2
 2180 0380 91       		.byte	0x91
 2181 0381 74       		.sleb128 -12
 2182 0382 00       		.byte	0
 2183 0383 0E       		.uleb128 0xe
 2184 0384 AF050000 		.4byte	.LASF42
 2185 0388 01       		.byte	0x1
 2186 0389 3903     		.2byte	0x339
 2187 038b 76000000 		.4byte	0x76
 2188 038f 00000000 		.4byte	.LFB46
 2189 0393 12000000 		.4byte	.LFE46-.LFB46
 2190 0397 01       		.uleb128 0x1
 2191 0398 9C       		.byte	0x9c
 2192 0399 AD030000 		.4byte	0x3ad
 2193 039d 0D       		.uleb128 0xd
 2194 039e DA040000 		.4byte	.LASF20
 2195 03a2 01       		.byte	0x1
 2196 03a3 3903     		.2byte	0x339
 2197 03a5 81000000 		.4byte	0x81
 2198 03a9 02       		.uleb128 0x2
 2199 03aa 91       		.byte	0x91
 2200 03ab 74       		.sleb128 -12
 2201 03ac 00       		.byte	0
 2202 03ad 0E       		.uleb128 0xe
 2203 03ae E1040000 		.4byte	.LASF43
 2204 03b2 01       		.byte	0x1
 2205 03b3 5503     		.2byte	0x355
 2206 03b5 76000000 		.4byte	0x76
 2207 03b9 00000000 		.4byte	.LFB47
 2208 03bd 12000000 		.4byte	.LFE47-.LFB47
 2209 03c1 01       		.uleb128 0x1
 2210 03c2 9C       		.byte	0x9c
 2211 03c3 D7030000 		.4byte	0x3d7
 2212 03c7 0D       		.uleb128 0xd
 2213 03c8 DA040000 		.4byte	.LASF20
 2214 03cc 01       		.byte	0x1
 2215 03cd 5503     		.2byte	0x355
 2216 03cf 81000000 		.4byte	0x81
 2217 03d3 02       		.uleb128 0x2
 2218 03d4 91       		.byte	0x91
 2219 03d5 74       		.sleb128 -12
 2220 03d6 00       		.byte	0
 2221 03d7 0E       		.uleb128 0xe
 2222 03d8 C6020000 		.4byte	.LASF44
 2223 03dc 01       		.byte	0x1
 2224 03dd 7103     		.2byte	0x371
 2225 03df 76000000 		.4byte	0x76
 2226 03e3 00000000 		.4byte	.LFB48
 2227 03e7 12000000 		.4byte	.LFE48-.LFB48
 2228 03eb 01       		.uleb128 0x1
 2229 03ec 9C       		.byte	0x9c
 2230 03ed 01040000 		.4byte	0x401
 2231 03f1 0D       		.uleb128 0xd
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 90


 2232 03f2 DA040000 		.4byte	.LASF20
 2233 03f6 01       		.byte	0x1
 2234 03f7 7103     		.2byte	0x371
 2235 03f9 81000000 		.4byte	0x81
 2236 03fd 02       		.uleb128 0x2
 2237 03fe 91       		.byte	0x91
 2238 03ff 74       		.sleb128 -12
 2239 0400 00       		.byte	0
 2240 0401 10       		.uleb128 0x10
 2241 0402 F8000000 		.4byte	.LASF45
 2242 0406 01       		.byte	0x1
 2243 0407 4D04     		.2byte	0x44d
 2244 0409 81000000 		.4byte	0x81
 2245 040d 00000000 		.4byte	.LFB49
 2246 0411 14010000 		.4byte	.LFE49-.LFB49
 2247 0415 01       		.uleb128 0x1
 2248 0416 9C       		.byte	0x9c
 2249 0417 76040000 		.4byte	0x476
 2250 041b 0D       		.uleb128 0xd
 2251 041c ED020000 		.4byte	.LASF18
 2252 0420 01       		.byte	0x1
 2253 0421 4D04     		.2byte	0x44d
 2254 0423 81000000 		.4byte	0x81
 2255 0427 02       		.uleb128 0x2
 2256 0428 91       		.byte	0x91
 2257 0429 6C       		.sleb128 -20
 2258 042a 0C       		.uleb128 0xc
 2259 042b DA040000 		.4byte	.LASF20
 2260 042f 01       		.byte	0x1
 2261 0430 4F04     		.2byte	0x44f
 2262 0432 6B000000 		.4byte	0x6b
 2263 0436 02       		.uleb128 0x2
 2264 0437 91       		.byte	0x91
 2265 0438 77       		.sleb128 -9
 2266 0439 0C       		.uleb128 0xc
 2267 043a 36030000 		.4byte	.LASF46
 2268 043e 01       		.byte	0x1
 2269 043f 5004     		.2byte	0x450
 2270 0441 6B000000 		.4byte	0x6b
 2271 0445 02       		.uleb128 0x2
 2272 0446 91       		.byte	0x91
 2273 0447 71       		.sleb128 -15
 2274 0448 0C       		.uleb128 0xc
 2275 0449 8A060000 		.4byte	.LASF47
 2276 044d 01       		.byte	0x1
 2277 044e 5104     		.2byte	0x451
 2278 0450 6B000000 		.4byte	0x6b
 2279 0454 02       		.uleb128 0x2
 2280 0455 91       		.byte	0x91
 2281 0456 70       		.sleb128 -16
 2282 0457 0C       		.uleb128 0xc
 2283 0458 52000000 		.4byte	.LASF48
 2284 045c 01       		.byte	0x1
 2285 045d 5304     		.2byte	0x453
 2286 045f 76000000 		.4byte	0x76
 2287 0463 02       		.uleb128 0x2
 2288 0464 91       		.byte	0x91
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 91


 2289 0465 74       		.sleb128 -12
 2290 0466 0C       		.uleb128 0xc
 2291 0467 E5010000 		.4byte	.LASF49
 2292 046b 01       		.byte	0x1
 2293 046c 5404     		.2byte	0x454
 2294 046e 76000000 		.4byte	0x76
 2295 0472 02       		.uleb128 0x2
 2296 0473 91       		.byte	0x91
 2297 0474 72       		.sleb128 -14
 2298 0475 00       		.byte	0
 2299 0476 10       		.uleb128 0x10
 2300 0477 FE060000 		.4byte	.LASF50
 2301 047b 01       		.byte	0x1
 2302 047c 9F04     		.2byte	0x49f
 2303 047e 81000000 		.4byte	0x81
 2304 0482 00000000 		.4byte	.LFB50
 2305 0486 44000000 		.4byte	.LFE50-.LFB50
 2306 048a 01       		.uleb128 0x1
 2307 048b 9C       		.byte	0x9c
 2308 048c CD040000 		.4byte	0x4cd
 2309 0490 0D       		.uleb128 0xd
 2310 0491 DA040000 		.4byte	.LASF20
 2311 0495 01       		.byte	0x1
 2312 0496 9F04     		.2byte	0x49f
 2313 0498 81000000 		.4byte	0x81
 2314 049c 02       		.uleb128 0x2
 2315 049d 91       		.byte	0x91
 2316 049e 64       		.sleb128 -28
 2317 049f 0C       		.uleb128 0xc
 2318 04a0 EF000000 		.4byte	.LASF51
 2319 04a4 01       		.byte	0x1
 2320 04a5 A104     		.2byte	0x4a1
 2321 04a7 81000000 		.4byte	0x81
 2322 04ab 02       		.uleb128 0x2
 2323 04ac 91       		.byte	0x91
 2324 04ad 74       		.sleb128 -12
 2325 04ae 0C       		.uleb128 0xc
 2326 04af 4B070000 		.4byte	.LASF52
 2327 04b3 01       		.byte	0x1
 2328 04b4 A204     		.2byte	0x4a2
 2329 04b6 81000000 		.4byte	0x81
 2330 04ba 02       		.uleb128 0x2
 2331 04bb 91       		.byte	0x91
 2332 04bc 6C       		.sleb128 -20
 2333 04bd 0C       		.uleb128 0xc
 2334 04be 3A010000 		.4byte	.LASF53
 2335 04c2 01       		.byte	0x1
 2336 04c3 A304     		.2byte	0x4a3
 2337 04c5 81000000 		.4byte	0x81
 2338 04c9 02       		.uleb128 0x2
 2339 04ca 91       		.byte	0x91
 2340 04cb 70       		.sleb128 -16
 2341 04cc 00       		.byte	0
 2342 04cd 10       		.uleb128 0x10
 2343 04ce DA060000 		.4byte	.LASF54
 2344 04d2 01       		.byte	0x1
 2345 04d3 CD04     		.2byte	0x4cd
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 92


 2346 04d5 81000000 		.4byte	0x81
 2347 04d9 00000000 		.4byte	.LFB51
 2348 04dd 38000000 		.4byte	.LFE51-.LFB51
 2349 04e1 01       		.uleb128 0x1
 2350 04e2 9C       		.byte	0x9c
 2351 04e3 04050000 		.4byte	0x504
 2352 04e7 0B       		.uleb128 0xb
 2353 04e8 6900     		.ascii	"i\000"
 2354 04ea 01       		.byte	0x1
 2355 04eb D004     		.2byte	0x4d0
 2356 04ed 81000000 		.4byte	0x81
 2357 04f1 02       		.uleb128 0x2
 2358 04f2 91       		.byte	0x91
 2359 04f3 74       		.sleb128 -12
 2360 04f4 0C       		.uleb128 0xc
 2361 04f5 3A010000 		.4byte	.LASF53
 2362 04f9 01       		.byte	0x1
 2363 04fa D104     		.2byte	0x4d1
 2364 04fc 81000000 		.4byte	0x81
 2365 0500 02       		.uleb128 0x2
 2366 0501 91       		.byte	0x91
 2367 0502 70       		.sleb128 -16
 2368 0503 00       		.byte	0
 2369 0504 0A       		.uleb128 0xa
 2370 0505 0C060000 		.4byte	.LASF55
 2371 0509 01       		.byte	0x1
 2372 050a FC04     		.2byte	0x4fc
 2373 050c 00000000 		.4byte	.LFB52
 2374 0510 5C000000 		.4byte	.LFE52-.LFB52
 2375 0514 01       		.uleb128 0x1
 2376 0515 9C       		.byte	0x9c
 2377 0516 48050000 		.4byte	0x548
 2378 051a 0D       		.uleb128 0xd
 2379 051b DA040000 		.4byte	.LASF20
 2380 051f 01       		.byte	0x1
 2381 0520 FC04     		.2byte	0x4fc
 2382 0522 81000000 		.4byte	0x81
 2383 0526 02       		.uleb128 0x2
 2384 0527 91       		.byte	0x91
 2385 0528 6C       		.sleb128 -20
 2386 0529 0C       		.uleb128 0xc
 2387 052a EF000000 		.4byte	.LASF51
 2388 052e 01       		.byte	0x1
 2389 052f FF04     		.2byte	0x4ff
 2390 0531 6B000000 		.4byte	0x6b
 2391 0535 02       		.uleb128 0x2
 2392 0536 91       		.byte	0x91
 2393 0537 77       		.sleb128 -9
 2394 0538 0C       		.uleb128 0xc
 2395 0539 4B070000 		.4byte	.LASF52
 2396 053d 01       		.byte	0x1
 2397 053e 0005     		.2byte	0x500
 2398 0540 6B000000 		.4byte	0x6b
 2399 0544 02       		.uleb128 0x2
 2400 0545 91       		.byte	0x91
 2401 0546 76       		.sleb128 -10
 2402 0547 00       		.byte	0
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 93


 2403 0548 0A       		.uleb128 0xa
 2404 0549 99070000 		.4byte	.LASF56
 2405 054d 01       		.byte	0x1
 2406 054e 2705     		.2byte	0x527
 2407 0550 00000000 		.4byte	.LFB53
 2408 0554 5C000000 		.4byte	.LFE53-.LFB53
 2409 0558 01       		.uleb128 0x1
 2410 0559 9C       		.byte	0x9c
 2411 055a 8C050000 		.4byte	0x58c
 2412 055e 0D       		.uleb128 0xd
 2413 055f DA040000 		.4byte	.LASF20
 2414 0563 01       		.byte	0x1
 2415 0564 2705     		.2byte	0x527
 2416 0566 81000000 		.4byte	0x81
 2417 056a 02       		.uleb128 0x2
 2418 056b 91       		.byte	0x91
 2419 056c 6C       		.sleb128 -20
 2420 056d 0C       		.uleb128 0xc
 2421 056e EF000000 		.4byte	.LASF51
 2422 0572 01       		.byte	0x1
 2423 0573 2905     		.2byte	0x529
 2424 0575 6B000000 		.4byte	0x6b
 2425 0579 02       		.uleb128 0x2
 2426 057a 91       		.byte	0x91
 2427 057b 77       		.sleb128 -9
 2428 057c 0C       		.uleb128 0xc
 2429 057d 4B070000 		.4byte	.LASF52
 2430 0581 01       		.byte	0x1
 2431 0582 2A05     		.2byte	0x52a
 2432 0584 6B000000 		.4byte	0x6b
 2433 0588 02       		.uleb128 0x2
 2434 0589 91       		.byte	0x91
 2435 058a 76       		.sleb128 -10
 2436 058b 00       		.byte	0
 2437 058c 0E       		.uleb128 0xe
 2438 058d BD000000 		.4byte	.LASF57
 2439 0591 01       		.byte	0x1
 2440 0592 BB09     		.2byte	0x9bb
 2441 0594 76000000 		.4byte	0x76
 2442 0598 00000000 		.4byte	.LFB54
 2443 059c 3C000000 		.4byte	.LFE54-.LFB54
 2444 05a0 01       		.uleb128 0x1
 2445 05a1 9C       		.byte	0x9c
 2446 05a2 D2050000 		.4byte	0x5d2
 2447 05a6 11       		.uleb128 0x11
 2448 05a7 783100   		.ascii	"x1\000"
 2449 05aa 01       		.byte	0x1
 2450 05ab BB09     		.2byte	0x9bb
 2451 05ad 76000000 		.4byte	0x76
 2452 05b1 02       		.uleb128 0x2
 2453 05b2 91       		.byte	0x91
 2454 05b3 6E       		.sleb128 -18
 2455 05b4 11       		.uleb128 0x11
 2456 05b5 783200   		.ascii	"x2\000"
 2457 05b8 01       		.byte	0x1
 2458 05b9 BB09     		.2byte	0x9bb
 2459 05bb 76000000 		.4byte	0x76
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 94


 2460 05bf 02       		.uleb128 0x2
 2461 05c0 91       		.byte	0x91
 2462 05c1 6C       		.sleb128 -20
 2463 05c2 0B       		.uleb128 0xb
 2464 05c3 746D7000 		.ascii	"tmp\000"
 2465 05c7 01       		.byte	0x1
 2466 05c8 BD09     		.2byte	0x9bd
 2467 05ca 81000000 		.4byte	0x81
 2468 05ce 02       		.uleb128 0x2
 2469 05cf 91       		.byte	0x91
 2470 05d0 74       		.sleb128 -12
 2471 05d1 00       		.byte	0
 2472 05d2 0E       		.uleb128 0xe
 2473 05d3 A9020000 		.4byte	.LASF58
 2474 05d7 01       		.byte	0x1
 2475 05d8 A40A     		.2byte	0xaa4
 2476 05da 81000000 		.4byte	0x81
 2477 05de 00000000 		.4byte	.LFB55
 2478 05e2 1C000000 		.4byte	.LFE55-.LFB55
 2479 05e6 01       		.uleb128 0x1
 2480 05e7 9C       		.byte	0x9c
 2481 05e8 FC050000 		.4byte	0x5fc
 2482 05ec 0D       		.uleb128 0xd
 2483 05ed ED020000 		.4byte	.LASF18
 2484 05f1 01       		.byte	0x1
 2485 05f2 A40A     		.2byte	0xaa4
 2486 05f4 81000000 		.4byte	0x81
 2487 05f8 02       		.uleb128 0x2
 2488 05f9 91       		.byte	0x91
 2489 05fa 74       		.sleb128 -12
 2490 05fb 00       		.byte	0
 2491 05fc 0E       		.uleb128 0xe
 2492 05fd 15030000 		.4byte	.LASF59
 2493 0601 01       		.byte	0x1
 2494 0602 BE0A     		.2byte	0xabe
 2495 0604 6B000000 		.4byte	0x6b
 2496 0608 00000000 		.4byte	.LFB56
 2497 060c 1C000000 		.4byte	.LFE56-.LFB56
 2498 0610 01       		.uleb128 0x1
 2499 0611 9C       		.byte	0x9c
 2500 0612 26060000 		.4byte	0x626
 2501 0616 0D       		.uleb128 0xd
 2502 0617 ED020000 		.4byte	.LASF18
 2503 061b 01       		.byte	0x1
 2504 061c BE0A     		.2byte	0xabe
 2505 061e 81000000 		.4byte	0x81
 2506 0622 02       		.uleb128 0x2
 2507 0623 91       		.byte	0x91
 2508 0624 74       		.sleb128 -12
 2509 0625 00       		.byte	0
 2510 0626 0E       		.uleb128 0xe
 2511 0627 49010000 		.4byte	.LASF60
 2512 062b 01       		.byte	0x1
 2513 062c D80A     		.2byte	0xad8
 2514 062e 6B000000 		.4byte	0x6b
 2515 0632 00000000 		.4byte	.LFB57
 2516 0636 12000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 95


 2517 063a 01       		.uleb128 0x1
 2518 063b 9C       		.byte	0x9c
 2519 063c 50060000 		.4byte	0x650
 2520 0640 0D       		.uleb128 0xd
 2521 0641 DA040000 		.4byte	.LASF20
 2522 0645 01       		.byte	0x1
 2523 0646 D80A     		.2byte	0xad8
 2524 0648 81000000 		.4byte	0x81
 2525 064c 02       		.uleb128 0x2
 2526 064d 91       		.byte	0x91
 2527 064e 74       		.sleb128 -12
 2528 064f 00       		.byte	0
 2529 0650 12       		.uleb128 0x12
 2530 0651 9F010000 		.4byte	.LASF61
 2531 0655 01       		.byte	0x1
 2532 0656 F20A     		.2byte	0xaf2
 2533 0658 00000000 		.4byte	.LFB58
 2534 065c 14000000 		.4byte	.LFE58-.LFB58
 2535 0660 01       		.uleb128 0x1
 2536 0661 9C       		.byte	0x9c
 2537 0662 12       		.uleb128 0x12
 2538 0663 06020000 		.4byte	.LASF62
 2539 0667 01       		.byte	0x1
 2540 0668 0B0B     		.2byte	0xb0b
 2541 066a 00000000 		.4byte	.LFB59
 2542 066e 14000000 		.4byte	.LFE59-.LFB59
 2543 0672 01       		.uleb128 0x1
 2544 0673 9C       		.byte	0x9c
 2545 0674 13       		.uleb128 0x13
 2546 0675 6B000000 		.4byte	0x6b
 2547 0679 84060000 		.4byte	0x684
 2548 067d 14       		.uleb128 0x14
 2549 067e A1000000 		.4byte	0xa1
 2550 0682 01       		.byte	0x1
 2551 0683 00       		.byte	0
 2552 0684 07       		.uleb128 0x7
 2553 0685 00000000 		.4byte	.LASF63
 2554 0689 01       		.byte	0x1
 2555 068a 59       		.byte	0x59
 2556 068b 74060000 		.4byte	0x674
 2557 068f 05       		.uleb128 0x5
 2558 0690 03       		.byte	0x3
 2559 0691 10000000 		.4byte	CapSense_CSD_debounceCounter
 2560 0695 13       		.uleb128 0x13
 2561 0696 76000000 		.4byte	0x76
 2562 069a A5060000 		.4byte	0x6a5
 2563 069e 14       		.uleb128 0x14
 2564 069f A1000000 		.4byte	0xa1
 2565 06a3 00       		.byte	0
 2566 06a4 00       		.byte	0
 2567 06a5 15       		.uleb128 0x15
 2568 06a6 AA040000 		.4byte	.LASF64
 2569 06aa 01       		.byte	0x1
 2570 06ab 2C       		.byte	0x2c
 2571 06ac 95060000 		.4byte	0x695
 2572 06b0 13       		.uleb128 0x13
 2573 06b1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 96


 2574 06b5 C0060000 		.4byte	0x6c0
 2575 06b9 14       		.uleb128 0x14
 2576 06ba A1000000 		.4byte	0xa1
 2577 06be 00       		.byte	0
 2578 06bf 00       		.byte	0
 2579 06c0 15       		.uleb128 0x15
 2580 06c1 9D030000 		.4byte	.LASF65
 2581 06c5 01       		.byte	0x1
 2582 06c6 2D       		.byte	0x2d
 2583 06c7 B0060000 		.4byte	0x6b0
 2584 06cb 15       		.uleb128 0x15
 2585 06cc 62010000 		.4byte	.LASF66
 2586 06d0 01       		.byte	0x1
 2587 06d1 2E       		.byte	0x2e
 2588 06d2 D6060000 		.4byte	0x6d6
 2589 06d6 16       		.uleb128 0x16
 2590 06d7 B0060000 		.4byte	0x6b0
 2591 06db 17       		.uleb128 0x17
 2592 06dc F4020000 		.4byte	.LASF67
 2593 06e0 01       		.byte	0x1
 2594 06e1 34       		.byte	0x34
 2595 06e2 95060000 		.4byte	0x695
 2596 06e6 05       		.uleb128 0x5
 2597 06e7 03       		.byte	0x3
 2598 06e8 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2599 06ec 17       		.uleb128 0x17
 2600 06ed 72070000 		.4byte	.LASF68
 2601 06f1 01       		.byte	0x1
 2602 06f2 35       		.byte	0x35
 2603 06f3 B0060000 		.4byte	0x6b0
 2604 06f7 05       		.uleb128 0x5
 2605 06f8 03       		.byte	0x3
 2606 06f9 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2607 06fd 17       		.uleb128 0x17
 2608 06fe 59020000 		.4byte	.LASF69
 2609 0702 01       		.byte	0x1
 2610 0703 36       		.byte	0x36
 2611 0704 95060000 		.4byte	0x695
 2612 0708 05       		.uleb128 0x5
 2613 0709 03       		.byte	0x3
 2614 070a 00000000 		.4byte	CapSense_CSD_sensorSignal
 2615 070e 17       		.uleb128 0x17
 2616 070f B4070000 		.4byte	.LASF70
 2617 0713 01       		.byte	0x1
 2618 0714 37       		.byte	0x37
 2619 0715 B0060000 		.4byte	0x6b0
 2620 0719 05       		.uleb128 0x5
 2621 071a 03       		.byte	0x3
 2622 071b 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2623 071f 17       		.uleb128 0x17
 2624 0720 19010000 		.4byte	.LASF71
 2625 0724 01       		.byte	0x1
 2626 0725 39       		.byte	0x39
 2627 0726 B0060000 		.4byte	0x6b0
 2628 072a 05       		.uleb128 0x5
 2629 072b 03       		.byte	0x3
 2630 072c 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 97


 2631 0730 17       		.uleb128 0x17
 2632 0731 73020000 		.4byte	.LASF72
 2633 0735 01       		.byte	0x1
 2634 0736 3A       		.byte	0x3a
 2635 0737 B0060000 		.4byte	0x6b0
 2636 073b 05       		.uleb128 0x5
 2637 073c 03       		.byte	0x3
 2638 073d 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 2639 0741 17       		.uleb128 0x17
 2640 0742 7F040000 		.4byte	.LASF73
 2641 0746 01       		.byte	0x1
 2642 0747 49       		.byte	0x49
 2643 0748 52070000 		.4byte	0x752
 2644 074c 05       		.uleb128 0x5
 2645 074d 03       		.byte	0x3
 2646 074e 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2647 0752 16       		.uleb128 0x16
 2648 0753 95060000 		.4byte	0x695
 2649 0757 17       		.uleb128 0x17
 2650 0758 EB050000 		.4byte	.LASF74
 2651 075c 01       		.byte	0x1
 2652 075d 4D       		.byte	0x4d
 2653 075e 68070000 		.4byte	0x768
 2654 0762 05       		.uleb128 0x5
 2655 0763 03       		.byte	0x3
 2656 0764 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2657 0768 16       		.uleb128 0x16
 2658 0769 95060000 		.4byte	0x695
 2659 076d 17       		.uleb128 0x17
 2660 076e 72060000 		.4byte	.LASF75
 2661 0772 01       		.byte	0x1
 2662 0773 51       		.byte	0x51
 2663 0774 7E070000 		.4byte	0x77e
 2664 0778 05       		.uleb128 0x5
 2665 0779 03       		.byte	0x3
 2666 077a 00000000 		.4byte	CapSense_CSD_hysteresis
 2667 077e 16       		.uleb128 0x16
 2668 077f 95060000 		.4byte	0x695
 2669 0783 17       		.uleb128 0x17
 2670 0784 82010000 		.4byte	.LASF76
 2671 0788 01       		.byte	0x1
 2672 0789 55       		.byte	0x55
 2673 078a 94070000 		.4byte	0x794
 2674 078e 05       		.uleb128 0x5
 2675 078f 03       		.byte	0x3
 2676 0790 00000000 		.4byte	CapSense_CSD_debounce
 2677 0794 16       		.uleb128 0x16
 2678 0795 B0060000 		.4byte	0x6b0
 2679 0799 17       		.uleb128 0x17
 2680 079a 58070000 		.4byte	.LASF77
 2681 079e 01       		.byte	0x1
 2682 079f 5D       		.byte	0x5d
 2683 07a0 AA070000 		.4byte	0x7aa
 2684 07a4 05       		.uleb128 0x5
 2685 07a5 03       		.byte	0x3
 2686 07a6 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2687 07aa 16       		.uleb128 0x16
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 98


 2688 07ab B0060000 		.4byte	0x6b0
 2689 07af 17       		.uleb128 0x17
 2690 07b0 CE050000 		.4byte	.LASF78
 2691 07b4 01       		.byte	0x1
 2692 07b5 61       		.byte	0x61
 2693 07b6 C0070000 		.4byte	0x7c0
 2694 07ba 05       		.uleb128 0x5
 2695 07bb 03       		.byte	0x3
 2696 07bc 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2697 07c0 16       		.uleb128 0x16
 2698 07c1 B0060000 		.4byte	0x6b0
 2699 07c5 17       		.uleb128 0x17
 2700 07c6 56060000 		.4byte	.LASF79
 2701 07ca 01       		.byte	0x1
 2702 07cb 27       		.byte	0x27
 2703 07cc 95060000 		.4byte	0x695
 2704 07d0 05       		.uleb128 0x5
 2705 07d1 03       		.byte	0x3
 2706 07d2 00000000 		.4byte	CapSense_CSD_rawFilterData1
 2707 07d6 17       		.uleb128 0x17
 2708 07d7 34000000 		.4byte	.LASF80
 2709 07db 01       		.byte	0x1
 2710 07dc 45       		.byte	0x45
 2711 07dd 6B000000 		.4byte	0x6b
 2712 07e1 05       		.uleb128 0x5
 2713 07e2 03       		.byte	0x3
 2714 07e3 00000000 		.4byte	CapSense_CSD_enableRawFilters
 2715 07e7 00       		.byte	0
 2716              		.section	.debug_abbrev,"",%progbits
 2717              	.Ldebug_abbrev0:
 2718 0000 01       		.uleb128 0x1
 2719 0001 11       		.uleb128 0x11
 2720 0002 01       		.byte	0x1
 2721 0003 25       		.uleb128 0x25
 2722 0004 0E       		.uleb128 0xe
 2723 0005 13       		.uleb128 0x13
 2724 0006 0B       		.uleb128 0xb
 2725 0007 03       		.uleb128 0x3
 2726 0008 0E       		.uleb128 0xe
 2727 0009 1B       		.uleb128 0x1b
 2728 000a 0E       		.uleb128 0xe
 2729 000b 55       		.uleb128 0x55
 2730 000c 17       		.uleb128 0x17
 2731 000d 11       		.uleb128 0x11
 2732 000e 01       		.uleb128 0x1
 2733 000f 10       		.uleb128 0x10
 2734 0010 17       		.uleb128 0x17
 2735 0011 00       		.byte	0
 2736 0012 00       		.byte	0
 2737 0013 02       		.uleb128 0x2
 2738 0014 24       		.uleb128 0x24
 2739 0015 00       		.byte	0
 2740 0016 0B       		.uleb128 0xb
 2741 0017 0B       		.uleb128 0xb
 2742 0018 3E       		.uleb128 0x3e
 2743 0019 0B       		.uleb128 0xb
 2744 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 99


 2745 001b 0E       		.uleb128 0xe
 2746 001c 00       		.byte	0
 2747 001d 00       		.byte	0
 2748 001e 03       		.uleb128 0x3
 2749 001f 24       		.uleb128 0x24
 2750 0020 00       		.byte	0
 2751 0021 0B       		.uleb128 0xb
 2752 0022 0B       		.uleb128 0xb
 2753 0023 3E       		.uleb128 0x3e
 2754 0024 0B       		.uleb128 0xb
 2755 0025 03       		.uleb128 0x3
 2756 0026 08       		.uleb128 0x8
 2757 0027 00       		.byte	0
 2758 0028 00       		.byte	0
 2759 0029 04       		.uleb128 0x4
 2760 002a 16       		.uleb128 0x16
 2761 002b 00       		.byte	0
 2762 002c 03       		.uleb128 0x3
 2763 002d 0E       		.uleb128 0xe
 2764 002e 3A       		.uleb128 0x3a
 2765 002f 0B       		.uleb128 0xb
 2766 0030 3B       		.uleb128 0x3b
 2767 0031 0B       		.uleb128 0xb
 2768 0032 49       		.uleb128 0x49
 2769 0033 13       		.uleb128 0x13
 2770 0034 00       		.byte	0
 2771 0035 00       		.byte	0
 2772 0036 05       		.uleb128 0x5
 2773 0037 2E       		.uleb128 0x2e
 2774 0038 01       		.byte	0x1
 2775 0039 3F       		.uleb128 0x3f
 2776 003a 19       		.uleb128 0x19
 2777 003b 03       		.uleb128 0x3
 2778 003c 0E       		.uleb128 0xe
 2779 003d 3A       		.uleb128 0x3a
 2780 003e 0B       		.uleb128 0xb
 2781 003f 3B       		.uleb128 0x3b
 2782 0040 0B       		.uleb128 0xb
 2783 0041 27       		.uleb128 0x27
 2784 0042 19       		.uleb128 0x19
 2785 0043 11       		.uleb128 0x11
 2786 0044 01       		.uleb128 0x1
 2787 0045 12       		.uleb128 0x12
 2788 0046 06       		.uleb128 0x6
 2789 0047 40       		.uleb128 0x40
 2790 0048 18       		.uleb128 0x18
 2791 0049 9742     		.uleb128 0x2117
 2792 004b 19       		.uleb128 0x19
 2793 004c 01       		.uleb128 0x1
 2794 004d 13       		.uleb128 0x13
 2795 004e 00       		.byte	0
 2796 004f 00       		.byte	0
 2797 0050 06       		.uleb128 0x6
 2798 0051 05       		.uleb128 0x5
 2799 0052 00       		.byte	0
 2800 0053 03       		.uleb128 0x3
 2801 0054 0E       		.uleb128 0xe
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 100


 2802 0055 3A       		.uleb128 0x3a
 2803 0056 0B       		.uleb128 0xb
 2804 0057 3B       		.uleb128 0x3b
 2805 0058 0B       		.uleb128 0xb
 2806 0059 49       		.uleb128 0x49
 2807 005a 13       		.uleb128 0x13
 2808 005b 02       		.uleb128 0x2
 2809 005c 18       		.uleb128 0x18
 2810 005d 00       		.byte	0
 2811 005e 00       		.byte	0
 2812 005f 07       		.uleb128 0x7
 2813 0060 34       		.uleb128 0x34
 2814 0061 00       		.byte	0
 2815 0062 03       		.uleb128 0x3
 2816 0063 0E       		.uleb128 0xe
 2817 0064 3A       		.uleb128 0x3a
 2818 0065 0B       		.uleb128 0xb
 2819 0066 3B       		.uleb128 0x3b
 2820 0067 0B       		.uleb128 0xb
 2821 0068 49       		.uleb128 0x49
 2822 0069 13       		.uleb128 0x13
 2823 006a 02       		.uleb128 0x2
 2824 006b 18       		.uleb128 0x18
 2825 006c 00       		.byte	0
 2826 006d 00       		.byte	0
 2827 006e 08       		.uleb128 0x8
 2828 006f 2E       		.uleb128 0x2e
 2829 0070 01       		.byte	0x1
 2830 0071 3F       		.uleb128 0x3f
 2831 0072 19       		.uleb128 0x19
 2832 0073 03       		.uleb128 0x3
 2833 0074 0E       		.uleb128 0xe
 2834 0075 3A       		.uleb128 0x3a
 2835 0076 0B       		.uleb128 0xb
 2836 0077 3B       		.uleb128 0x3b
 2837 0078 0B       		.uleb128 0xb
 2838 0079 27       		.uleb128 0x27
 2839 007a 19       		.uleb128 0x19
 2840 007b 11       		.uleb128 0x11
 2841 007c 01       		.uleb128 0x1
 2842 007d 12       		.uleb128 0x12
 2843 007e 06       		.uleb128 0x6
 2844 007f 40       		.uleb128 0x40
 2845 0080 18       		.uleb128 0x18
 2846 0081 9642     		.uleb128 0x2116
 2847 0083 19       		.uleb128 0x19
 2848 0084 01       		.uleb128 0x1
 2849 0085 13       		.uleb128 0x13
 2850 0086 00       		.byte	0
 2851 0087 00       		.byte	0
 2852 0088 09       		.uleb128 0x9
 2853 0089 34       		.uleb128 0x34
 2854 008a 00       		.byte	0
 2855 008b 03       		.uleb128 0x3
 2856 008c 08       		.uleb128 0x8
 2857 008d 3A       		.uleb128 0x3a
 2858 008e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 101


 2859 008f 3B       		.uleb128 0x3b
 2860 0090 0B       		.uleb128 0xb
 2861 0091 49       		.uleb128 0x49
 2862 0092 13       		.uleb128 0x13
 2863 0093 02       		.uleb128 0x2
 2864 0094 18       		.uleb128 0x18
 2865 0095 00       		.byte	0
 2866 0096 00       		.byte	0
 2867 0097 0A       		.uleb128 0xa
 2868 0098 2E       		.uleb128 0x2e
 2869 0099 01       		.byte	0x1
 2870 009a 3F       		.uleb128 0x3f
 2871 009b 19       		.uleb128 0x19
 2872 009c 03       		.uleb128 0x3
 2873 009d 0E       		.uleb128 0xe
 2874 009e 3A       		.uleb128 0x3a
 2875 009f 0B       		.uleb128 0xb
 2876 00a0 3B       		.uleb128 0x3b
 2877 00a1 05       		.uleb128 0x5
 2878 00a2 27       		.uleb128 0x27
 2879 00a3 19       		.uleb128 0x19
 2880 00a4 11       		.uleb128 0x11
 2881 00a5 01       		.uleb128 0x1
 2882 00a6 12       		.uleb128 0x12
 2883 00a7 06       		.uleb128 0x6
 2884 00a8 40       		.uleb128 0x40
 2885 00a9 18       		.uleb128 0x18
 2886 00aa 9642     		.uleb128 0x2116
 2887 00ac 19       		.uleb128 0x19
 2888 00ad 01       		.uleb128 0x1
 2889 00ae 13       		.uleb128 0x13
 2890 00af 00       		.byte	0
 2891 00b0 00       		.byte	0
 2892 00b1 0B       		.uleb128 0xb
 2893 00b2 34       		.uleb128 0x34
 2894 00b3 00       		.byte	0
 2895 00b4 03       		.uleb128 0x3
 2896 00b5 08       		.uleb128 0x8
 2897 00b6 3A       		.uleb128 0x3a
 2898 00b7 0B       		.uleb128 0xb
 2899 00b8 3B       		.uleb128 0x3b
 2900 00b9 05       		.uleb128 0x5
 2901 00ba 49       		.uleb128 0x49
 2902 00bb 13       		.uleb128 0x13
 2903 00bc 02       		.uleb128 0x2
 2904 00bd 18       		.uleb128 0x18
 2905 00be 00       		.byte	0
 2906 00bf 00       		.byte	0
 2907 00c0 0C       		.uleb128 0xc
 2908 00c1 34       		.uleb128 0x34
 2909 00c2 00       		.byte	0
 2910 00c3 03       		.uleb128 0x3
 2911 00c4 0E       		.uleb128 0xe
 2912 00c5 3A       		.uleb128 0x3a
 2913 00c6 0B       		.uleb128 0xb
 2914 00c7 3B       		.uleb128 0x3b
 2915 00c8 05       		.uleb128 0x5
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 102


 2916 00c9 49       		.uleb128 0x49
 2917 00ca 13       		.uleb128 0x13
 2918 00cb 02       		.uleb128 0x2
 2919 00cc 18       		.uleb128 0x18
 2920 00cd 00       		.byte	0
 2921 00ce 00       		.byte	0
 2922 00cf 0D       		.uleb128 0xd
 2923 00d0 05       		.uleb128 0x5
 2924 00d1 00       		.byte	0
 2925 00d2 03       		.uleb128 0x3
 2926 00d3 0E       		.uleb128 0xe
 2927 00d4 3A       		.uleb128 0x3a
 2928 00d5 0B       		.uleb128 0xb
 2929 00d6 3B       		.uleb128 0x3b
 2930 00d7 05       		.uleb128 0x5
 2931 00d8 49       		.uleb128 0x49
 2932 00d9 13       		.uleb128 0x13
 2933 00da 02       		.uleb128 0x2
 2934 00db 18       		.uleb128 0x18
 2935 00dc 00       		.byte	0
 2936 00dd 00       		.byte	0
 2937 00de 0E       		.uleb128 0xe
 2938 00df 2E       		.uleb128 0x2e
 2939 00e0 01       		.byte	0x1
 2940 00e1 3F       		.uleb128 0x3f
 2941 00e2 19       		.uleb128 0x19
 2942 00e3 03       		.uleb128 0x3
 2943 00e4 0E       		.uleb128 0xe
 2944 00e5 3A       		.uleb128 0x3a
 2945 00e6 0B       		.uleb128 0xb
 2946 00e7 3B       		.uleb128 0x3b
 2947 00e8 05       		.uleb128 0x5
 2948 00e9 27       		.uleb128 0x27
 2949 00ea 19       		.uleb128 0x19
 2950 00eb 49       		.uleb128 0x49
 2951 00ec 13       		.uleb128 0x13
 2952 00ed 11       		.uleb128 0x11
 2953 00ee 01       		.uleb128 0x1
 2954 00ef 12       		.uleb128 0x12
 2955 00f0 06       		.uleb128 0x6
 2956 00f1 40       		.uleb128 0x40
 2957 00f2 18       		.uleb128 0x18
 2958 00f3 9742     		.uleb128 0x2117
 2959 00f5 19       		.uleb128 0x19
 2960 00f6 01       		.uleb128 0x1
 2961 00f7 13       		.uleb128 0x13
 2962 00f8 00       		.byte	0
 2963 00f9 00       		.byte	0
 2964 00fa 0F       		.uleb128 0xf
 2965 00fb 2E       		.uleb128 0x2e
 2966 00fc 01       		.byte	0x1
 2967 00fd 3F       		.uleb128 0x3f
 2968 00fe 19       		.uleb128 0x19
 2969 00ff 03       		.uleb128 0x3
 2970 0100 0E       		.uleb128 0xe
 2971 0101 3A       		.uleb128 0x3a
 2972 0102 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 103


 2973 0103 3B       		.uleb128 0x3b
 2974 0104 05       		.uleb128 0x5
 2975 0105 27       		.uleb128 0x27
 2976 0106 19       		.uleb128 0x19
 2977 0107 11       		.uleb128 0x11
 2978 0108 01       		.uleb128 0x1
 2979 0109 12       		.uleb128 0x12
 2980 010a 06       		.uleb128 0x6
 2981 010b 40       		.uleb128 0x40
 2982 010c 18       		.uleb128 0x18
 2983 010d 9742     		.uleb128 0x2117
 2984 010f 19       		.uleb128 0x19
 2985 0110 01       		.uleb128 0x1
 2986 0111 13       		.uleb128 0x13
 2987 0112 00       		.byte	0
 2988 0113 00       		.byte	0
 2989 0114 10       		.uleb128 0x10
 2990 0115 2E       		.uleb128 0x2e
 2991 0116 01       		.byte	0x1
 2992 0117 3F       		.uleb128 0x3f
 2993 0118 19       		.uleb128 0x19
 2994 0119 03       		.uleb128 0x3
 2995 011a 0E       		.uleb128 0xe
 2996 011b 3A       		.uleb128 0x3a
 2997 011c 0B       		.uleb128 0xb
 2998 011d 3B       		.uleb128 0x3b
 2999 011e 05       		.uleb128 0x5
 3000 011f 27       		.uleb128 0x27
 3001 0120 19       		.uleb128 0x19
 3002 0121 49       		.uleb128 0x49
 3003 0122 13       		.uleb128 0x13
 3004 0123 11       		.uleb128 0x11
 3005 0124 01       		.uleb128 0x1
 3006 0125 12       		.uleb128 0x12
 3007 0126 06       		.uleb128 0x6
 3008 0127 40       		.uleb128 0x40
 3009 0128 18       		.uleb128 0x18
 3010 0129 9642     		.uleb128 0x2116
 3011 012b 19       		.uleb128 0x19
 3012 012c 01       		.uleb128 0x1
 3013 012d 13       		.uleb128 0x13
 3014 012e 00       		.byte	0
 3015 012f 00       		.byte	0
 3016 0130 11       		.uleb128 0x11
 3017 0131 05       		.uleb128 0x5
 3018 0132 00       		.byte	0
 3019 0133 03       		.uleb128 0x3
 3020 0134 08       		.uleb128 0x8
 3021 0135 3A       		.uleb128 0x3a
 3022 0136 0B       		.uleb128 0xb
 3023 0137 3B       		.uleb128 0x3b
 3024 0138 05       		.uleb128 0x5
 3025 0139 49       		.uleb128 0x49
 3026 013a 13       		.uleb128 0x13
 3027 013b 02       		.uleb128 0x2
 3028 013c 18       		.uleb128 0x18
 3029 013d 00       		.byte	0
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 104


 3030 013e 00       		.byte	0
 3031 013f 12       		.uleb128 0x12
 3032 0140 2E       		.uleb128 0x2e
 3033 0141 00       		.byte	0
 3034 0142 3F       		.uleb128 0x3f
 3035 0143 19       		.uleb128 0x19
 3036 0144 03       		.uleb128 0x3
 3037 0145 0E       		.uleb128 0xe
 3038 0146 3A       		.uleb128 0x3a
 3039 0147 0B       		.uleb128 0xb
 3040 0148 3B       		.uleb128 0x3b
 3041 0149 05       		.uleb128 0x5
 3042 014a 27       		.uleb128 0x27
 3043 014b 19       		.uleb128 0x19
 3044 014c 11       		.uleb128 0x11
 3045 014d 01       		.uleb128 0x1
 3046 014e 12       		.uleb128 0x12
 3047 014f 06       		.uleb128 0x6
 3048 0150 40       		.uleb128 0x40
 3049 0151 18       		.uleb128 0x18
 3050 0152 9742     		.uleb128 0x2117
 3051 0154 19       		.uleb128 0x19
 3052 0155 00       		.byte	0
 3053 0156 00       		.byte	0
 3054 0157 13       		.uleb128 0x13
 3055 0158 01       		.uleb128 0x1
 3056 0159 01       		.byte	0x1
 3057 015a 49       		.uleb128 0x49
 3058 015b 13       		.uleb128 0x13
 3059 015c 01       		.uleb128 0x1
 3060 015d 13       		.uleb128 0x13
 3061 015e 00       		.byte	0
 3062 015f 00       		.byte	0
 3063 0160 14       		.uleb128 0x14
 3064 0161 21       		.uleb128 0x21
 3065 0162 00       		.byte	0
 3066 0163 49       		.uleb128 0x49
 3067 0164 13       		.uleb128 0x13
 3068 0165 2F       		.uleb128 0x2f
 3069 0166 0B       		.uleb128 0xb
 3070 0167 00       		.byte	0
 3071 0168 00       		.byte	0
 3072 0169 15       		.uleb128 0x15
 3073 016a 34       		.uleb128 0x34
 3074 016b 00       		.byte	0
 3075 016c 03       		.uleb128 0x3
 3076 016d 0E       		.uleb128 0xe
 3077 016e 3A       		.uleb128 0x3a
 3078 016f 0B       		.uleb128 0xb
 3079 0170 3B       		.uleb128 0x3b
 3080 0171 0B       		.uleb128 0xb
 3081 0172 49       		.uleb128 0x49
 3082 0173 13       		.uleb128 0x13
 3083 0174 3F       		.uleb128 0x3f
 3084 0175 19       		.uleb128 0x19
 3085 0176 3C       		.uleb128 0x3c
 3086 0177 19       		.uleb128 0x19
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 105


 3087 0178 00       		.byte	0
 3088 0179 00       		.byte	0
 3089 017a 16       		.uleb128 0x16
 3090 017b 26       		.uleb128 0x26
 3091 017c 00       		.byte	0
 3092 017d 49       		.uleb128 0x49
 3093 017e 13       		.uleb128 0x13
 3094 017f 00       		.byte	0
 3095 0180 00       		.byte	0
 3096 0181 17       		.uleb128 0x17
 3097 0182 34       		.uleb128 0x34
 3098 0183 00       		.byte	0
 3099 0184 03       		.uleb128 0x3
 3100 0185 0E       		.uleb128 0xe
 3101 0186 3A       		.uleb128 0x3a
 3102 0187 0B       		.uleb128 0xb
 3103 0188 3B       		.uleb128 0x3b
 3104 0189 0B       		.uleb128 0xb
 3105 018a 49       		.uleb128 0x49
 3106 018b 13       		.uleb128 0x13
 3107 018c 3F       		.uleb128 0x3f
 3108 018d 19       		.uleb128 0x19
 3109 018e 02       		.uleb128 0x2
 3110 018f 18       		.uleb128 0x18
 3111 0190 00       		.byte	0
 3112 0191 00       		.byte	0
 3113 0192 00       		.byte	0
 3114              		.section	.debug_aranges,"",%progbits
 3115 0000 EC000000 		.4byte	0xec
 3116 0004 0200     		.2byte	0x2
 3117 0006 00000000 		.4byte	.Ldebug_info0
 3118 000a 04       		.byte	0x4
 3119 000b 00       		.byte	0
 3120 000c 0000     		.2byte	0
 3121 000e 0000     		.2byte	0
 3122 0010 00000000 		.4byte	.LFB33
 3123 0014 78000000 		.4byte	.LFE33-.LFB33
 3124 0018 00000000 		.4byte	.LFB34
 3125 001c 2A000000 		.4byte	.LFE34-.LFB34
 3126 0020 00000000 		.4byte	.LFB35
 3127 0024 26000000 		.4byte	.LFE35-.LFB35
 3128 0028 00000000 		.4byte	.LFB36
 3129 002c 50000000 		.4byte	.LFE36-.LFB36
 3130 0030 00000000 		.4byte	.LFB37
 3131 0034 D4010000 		.4byte	.LFE37-.LFB37
 3132 0038 00000000 		.4byte	.LFB38
 3133 003c 16000000 		.4byte	.LFE38-.LFB38
 3134 0040 00000000 		.4byte	.LFB39
 3135 0044 40000000 		.4byte	.LFE39-.LFB39
 3136 0048 00000000 		.4byte	.LFB40
 3137 004c 58000000 		.4byte	.LFE40-.LFB40
 3138 0050 00000000 		.4byte	.LFB41
 3139 0054 1C000000 		.4byte	.LFE41-.LFB41
 3140 0058 00000000 		.4byte	.LFB42
 3141 005c 24000000 		.4byte	.LFE42-.LFB42
 3142 0060 00000000 		.4byte	.LFB43
 3143 0064 1C000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 106


 3144 0068 00000000 		.4byte	.LFB44
 3145 006c 24000000 		.4byte	.LFE44-.LFB44
 3146 0070 00000000 		.4byte	.LFB45
 3147 0074 12000000 		.4byte	.LFE45-.LFB45
 3148 0078 00000000 		.4byte	.LFB46
 3149 007c 12000000 		.4byte	.LFE46-.LFB46
 3150 0080 00000000 		.4byte	.LFB47
 3151 0084 12000000 		.4byte	.LFE47-.LFB47
 3152 0088 00000000 		.4byte	.LFB48
 3153 008c 12000000 		.4byte	.LFE48-.LFB48
 3154 0090 00000000 		.4byte	.LFB49
 3155 0094 14010000 		.4byte	.LFE49-.LFB49
 3156 0098 00000000 		.4byte	.LFB50
 3157 009c 44000000 		.4byte	.LFE50-.LFB50
 3158 00a0 00000000 		.4byte	.LFB51
 3159 00a4 38000000 		.4byte	.LFE51-.LFB51
 3160 00a8 00000000 		.4byte	.LFB52
 3161 00ac 5C000000 		.4byte	.LFE52-.LFB52
 3162 00b0 00000000 		.4byte	.LFB53
 3163 00b4 5C000000 		.4byte	.LFE53-.LFB53
 3164 00b8 00000000 		.4byte	.LFB54
 3165 00bc 3C000000 		.4byte	.LFE54-.LFB54
 3166 00c0 00000000 		.4byte	.LFB55
 3167 00c4 1C000000 		.4byte	.LFE55-.LFB55
 3168 00c8 00000000 		.4byte	.LFB56
 3169 00cc 1C000000 		.4byte	.LFE56-.LFB56
 3170 00d0 00000000 		.4byte	.LFB57
 3171 00d4 12000000 		.4byte	.LFE57-.LFB57
 3172 00d8 00000000 		.4byte	.LFB58
 3173 00dc 14000000 		.4byte	.LFE58-.LFB58
 3174 00e0 00000000 		.4byte	.LFB59
 3175 00e4 14000000 		.4byte	.LFE59-.LFB59
 3176 00e8 00000000 		.4byte	0
 3177 00ec 00000000 		.4byte	0
 3178              		.section	.debug_ranges,"",%progbits
 3179              	.Ldebug_ranges0:
 3180 0000 00000000 		.4byte	.LFB33
 3181 0004 78000000 		.4byte	.LFE33
 3182 0008 00000000 		.4byte	.LFB34
 3183 000c 2A000000 		.4byte	.LFE34
 3184 0010 00000000 		.4byte	.LFB35
 3185 0014 26000000 		.4byte	.LFE35
 3186 0018 00000000 		.4byte	.LFB36
 3187 001c 50000000 		.4byte	.LFE36
 3188 0020 00000000 		.4byte	.LFB37
 3189 0024 D4010000 		.4byte	.LFE37
 3190 0028 00000000 		.4byte	.LFB38
 3191 002c 16000000 		.4byte	.LFE38
 3192 0030 00000000 		.4byte	.LFB39
 3193 0034 40000000 		.4byte	.LFE39
 3194 0038 00000000 		.4byte	.LFB40
 3195 003c 58000000 		.4byte	.LFE40
 3196 0040 00000000 		.4byte	.LFB41
 3197 0044 1C000000 		.4byte	.LFE41
 3198 0048 00000000 		.4byte	.LFB42
 3199 004c 24000000 		.4byte	.LFE42
 3200 0050 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 107


 3201 0054 1C000000 		.4byte	.LFE43
 3202 0058 00000000 		.4byte	.LFB44
 3203 005c 24000000 		.4byte	.LFE44
 3204 0060 00000000 		.4byte	.LFB45
 3205 0064 12000000 		.4byte	.LFE45
 3206 0068 00000000 		.4byte	.LFB46
 3207 006c 12000000 		.4byte	.LFE46
 3208 0070 00000000 		.4byte	.LFB47
 3209 0074 12000000 		.4byte	.LFE47
 3210 0078 00000000 		.4byte	.LFB48
 3211 007c 12000000 		.4byte	.LFE48
 3212 0080 00000000 		.4byte	.LFB49
 3213 0084 14010000 		.4byte	.LFE49
 3214 0088 00000000 		.4byte	.LFB50
 3215 008c 44000000 		.4byte	.LFE50
 3216 0090 00000000 		.4byte	.LFB51
 3217 0094 38000000 		.4byte	.LFE51
 3218 0098 00000000 		.4byte	.LFB52
 3219 009c 5C000000 		.4byte	.LFE52
 3220 00a0 00000000 		.4byte	.LFB53
 3221 00a4 5C000000 		.4byte	.LFE53
 3222 00a8 00000000 		.4byte	.LFB54
 3223 00ac 3C000000 		.4byte	.LFE54
 3224 00b0 00000000 		.4byte	.LFB55
 3225 00b4 1C000000 		.4byte	.LFE55
 3226 00b8 00000000 		.4byte	.LFB56
 3227 00bc 1C000000 		.4byte	.LFE56
 3228 00c0 00000000 		.4byte	.LFB57
 3229 00c4 12000000 		.4byte	.LFE57
 3230 00c8 00000000 		.4byte	.LFB58
 3231 00cc 14000000 		.4byte	.LFE58
 3232 00d0 00000000 		.4byte	.LFB59
 3233 00d4 14000000 		.4byte	.LFE59
 3234 00d8 00000000 		.4byte	0
 3235 00dc 00000000 		.4byte	0
 3236              		.section	.debug_line,"",%progbits
 3237              	.Ldebug_line0:
 3238 0000 30030000 		.section	.debug_str,"MS",%progbits,1
 3238      02005000 
 3238      00000201 
 3238      FB0E0D00 
 3238      01010101 
 3239              	.LASF63:
 3240 0000 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3240      656E7365 
 3240      5F435344 
 3240      5F646562 
 3240      6F756E63 
 3241              	.LASF10:
 3242 001d 75696E74 		.ascii	"uint16\000"
 3242      313600
 3243              	.LASF27:
 3244 0024 66696C74 		.ascii	"filteredRawData\000"
 3244      65726564 
 3244      52617744 
 3244      61746100 
 3245              	.LASF80:
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 108


 3246 0034 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 3246      656E7365 
 3246      5F435344 
 3246      5F656E61 
 3246      626C6552 
 3247              	.LASF48:
 3248 0052 66696E67 		.ascii	"fingerThreshold\000"
 3248      65725468 
 3248      72657368 
 3248      6F6C6400 
 3249              	.LASF17:
 3250 0062 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 3250      656E7365 
 3250      5F435344 
 3250      5F496E69 
 3250      7469616C 
 3251              	.LASF39:
 3252 0088 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 3252      656E7365 
 3252      5F435344 
 3252      5F536574 
 3252      44696666 
 3253              	.LASF7:
 3254 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 3254      206C6F6E 
 3254      6720756E 
 3254      7369676E 
 3254      65642069 
 3255              	.LASF57:
 3256 00bd 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 3256      656E7365 
 3256      5F435344 
 3256      5F494952 
 3256      3446696C 
 3257              	.LASF6:
 3258 00d5 6C6F6E67 		.ascii	"long long int\000"
 3258      206C6F6E 
 3258      6720696E 
 3258      7400
 3259              	.LASF0:
 3260 00e3 7369676E 		.ascii	"signed char\000"
 3260      65642063 
 3260      68617200 
 3261              	.LASF51:
 3262 00ef 72617749 		.ascii	"rawIndex\000"
 3262      6E646578 
 3262      00
 3263              	.LASF45:
 3264 00f8 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 3264      656E7365 
 3264      5F435344 
 3264      5F436865 
 3264      636B4973 
 3265              	.LASF71:
 3266 0119 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 3266      656E7365 
 3266      5F435344 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 109


 3266      5F6C6F77 
 3266      42617365 
 3267              	.LASF53:
 3268 013a 73746174 		.ascii	"state\000"
 3268      6500
 3269              	.LASF4:
 3270 0140 6C6F6E67 		.ascii	"long int\000"
 3270      20696E74 
 3270      00
 3271              	.LASF60:
 3272 0149 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 3272      656E7365 
 3272      5F435344 
 3272      5F476574 
 3272      4465626F 
 3273              	.LASF66:
 3274 0162 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 3274      656E7365 
 3274      5F435344 
 3274      5F776964 
 3274      6765744E 
 3275              	.LASF9:
 3276 017c 75696E74 		.ascii	"uint8\000"
 3276      3800
 3277              	.LASF76:
 3278 0182 43617053 		.ascii	"CapSense_CSD_debounce\000"
 3278      656E7365 
 3278      5F435344 
 3278      5F646562 
 3278      6F756E63 
 3279              	.LASF13:
 3280 0198 646F7562 		.ascii	"double\000"
 3280      6C6500
 3281              	.LASF61:
 3282 019f 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 3282      656E7365 
 3282      5F435344 
 3282      5F456E61 
 3282      626C6552 
 3283              	.LASF37:
 3284 01c1 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 3284      656E7365 
 3284      5F435344 
 3284      5F476574 
 3284      42617365 
 3285              	.LASF11:
 3286 01de 75696E74 		.ascii	"uint32\000"
 3286      333200
 3287              	.LASF49:
 3288 01e5 68797374 		.ascii	"hysteresis\000"
 3288      65726573 
 3288      697300
 3289              	.LASF16:
 3290 01f0 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 3290      656E7365 
 3290      5F435344 
 3290      5F426173 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 110


 3290      65496E69 
 3291              	.LASF62:
 3292 0206 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 3292      656E7365 
 3292      5F435344 
 3292      5F446973 
 3292      61626C65 
 3293              	.LASF40:
 3294 0229 76616C75 		.ascii	"value\000"
 3294      6500
 3295              	.LASF34:
 3296 022f 6C617374 		.ascii	"lastSensor\000"
 3296      53656E73 
 3296      6F7200
 3297              	.LASF8:
 3298 023a 756E7369 		.ascii	"unsigned int\000"
 3298      676E6564 
 3298      20696E74 
 3298      00
 3299              	.LASF5:
 3300 0247 6C6F6E67 		.ascii	"long unsigned int\000"
 3300      20756E73 
 3300      69676E65 
 3300      6420696E 
 3300      7400
 3301              	.LASF69:
 3302 0259 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 3302      656E7365 
 3302      5F435344 
 3302      5F73656E 
 3302      736F7253 
 3303              	.LASF72:
 3304 0273 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 3304      656E7365 
 3304      5F435344 
 3304      5F6C6F77 
 3304      42617365 
 3305              	.LASF36:
 3306 0291 64617461 		.ascii	"data\000"
 3306      00
 3307              	.LASF3:
 3308 0296 73686F72 		.ascii	"short unsigned int\000"
 3308      7420756E 
 3308      7369676E 
 3308      65642069 
 3308      6E7400
 3309              	.LASF58:
 3310 02a9 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 3310      656E7365 
 3310      5F435344 
 3310      5F476574 
 3310      57696467 
 3311              	.LASF44:
 3312 02c6 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 3312      656E7365 
 3312      5F435344 
 3312      5F476574 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 111


 3312      4E656761 
 3313              	.LASF18:
 3314 02ed 73656E73 		.ascii	"sensor\000"
 3314      6F7200
 3315              	.LASF67:
 3316 02f4 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 3316      656E7365 
 3316      5F435344 
 3316      5F73656E 
 3316      736F7242 
 3317              	.LASF24:
 3318 0310 63616C63 		.ascii	"calc\000"
 3318      00
 3319              	.LASF59:
 3320 0315 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 3320      656E7365 
 3320      5F435344 
 3320      5F476574 
 3320      4C6F7742 
 3321              	.LASF46:
 3322 0336 6465626F 		.ascii	"debounce\000"
 3322      756E6365 
 3322      00
 3323              	.LASF15:
 3324 033f 73697A65 		.ascii	"sizetype\000"
 3324      74797065 
 3324      00
 3325              	.LASF21:
 3326 0348 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 3326      656E7365 
 3326      5F435344 
 3326      5F496E69 
 3326      7469616C 
 3327              	.LASF82:
 3328 0370 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 3328      6E657261 
 3328      7465645F 
 3328      536F7572 
 3328      63655C50 
 3329              	.LASF65:
 3330 039d 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 3330      656E7365 
 3330      5F435344 
 3330      5F73656E 
 3330      736F7245 
 3331              	.LASF12:
 3332 03bb 666C6F61 		.ascii	"float\000"
 3332      7400
 3333              	.LASF81:
 3334 03c1 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3334      4320342E 
 3334      382E3420 
 3334      32303134 
 3334      30353236 
 3335 03f4 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3335      20726576 
 3335      6973696F 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 112


 3335      6E203231 
 3335      31333538 
 3336 0427 30202D66 		.ascii	"0 -ffunction-sections\000"
 3336      66756E63 
 3336      74696F6E 
 3336      2D736563 
 3336      74696F6E 
 3337              	.LASF19:
 3338 043d 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 3338      656E7365 
 3338      5F435344 
 3338      5F496E69 
 3338      7469616C 
 3339              	.LASF38:
 3340 0461 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 3340      656E7365 
 3340      5F435344 
 3340      5F476574 
 3340      44696666 
 3341              	.LASF73:
 3342 047f 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 3342      656E7365 
 3342      5F435344 
 3342      5F66696E 
 3342      67657254 
 3343              	.LASF1:
 3344 049c 756E7369 		.ascii	"unsigned char\000"
 3344      676E6564 
 3344      20636861 
 3344      7200
 3345              	.LASF64:
 3346 04aa 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 3346      656E7365 
 3346      5F435344 
 3346      5F73656E 
 3346      736F7252 
 3347              	.LASF28:
 3348 04c1 6E6F6973 		.ascii	"noiseThreshold\000"
 3348      65546872 
 3348      6573686F 
 3348      6C6400
 3349              	.LASF2:
 3350 04d0 73686F72 		.ascii	"short int\000"
 3350      7420696E 
 3350      7400
 3351              	.LASF20:
 3352 04da 77696467 		.ascii	"widget\000"
 3352      657400
 3353              	.LASF43:
 3354 04e1 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 3354      656E7365 
 3354      5F435344 
 3354      5F476574 
 3354      46696E67 
 3355              	.LASF83:
 3356 0502 433A5C55 		.ascii	"C:\\Users\\Sausy\\Documents\\PSoC Creator\\FTLK\\Ja"
 3356      73657273 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 113


 3356      5C536175 
 3356      73795C44 
 3356      6F63756D 
 3357 052f 68726573 		.ascii	"hresprojekt\\Jahresprojekt.cydsn\000"
 3357      70726F6A 
 3357      656B745C 
 3357      4A616872 
 3357      65737072 
 3358              	.LASF35:
 3359 054f 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 3359      656E7365 
 3359      5F435344 
 3359      5F536574 
 3359      42617365 
 3360              	.LASF22:
 3361 056c 69735365 		.ascii	"isSensorEnabled\000"
 3361      6E736F72 
 3361      456E6162 
 3361      6C656400 
 3362              	.LASF32:
 3363 057c 73656E73 		.ascii	"sensorsPerWidget\000"
 3363      6F727350 
 3363      65725769 
 3363      64676574 
 3363      00
 3364              	.LASF29:
 3365 058d 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 3365      656E7365 
 3365      5F435344 
 3365      5F557064 
 3365      61746553 
 3366              	.LASF42:
 3367 05af 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 3367      656E7365 
 3367      5F435344 
 3367      5F476574 
 3367      4E6F6973 
 3368              	.LASF78:
 3369 05ce 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 3369      656E7365 
 3369      5F435344 
 3369      5F6E756D 
 3369      6265724F 
 3370              	.LASF74:
 3371 05eb 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 3371      656E7365 
 3371      5F435344 
 3371      5F6E6F69 
 3371      73655468 
 3372              	.LASF14:
 3373 0607 63686172 		.ascii	"char\000"
 3373      00
 3374              	.LASF55:
 3375 060c 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 3375      656E7365 
 3375      5F435344 
 3375      5F456E61 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 114


 3375      626C6557 
 3376              	.LASF30:
 3377 0626 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 3377      656E7365 
 3377      5F435344 
 3377      5F557064 
 3377      61746545 
 3378              	.LASF33:
 3379 064a 66697273 		.ascii	"firstSensor\000"
 3379      7453656E 
 3379      736F7200 
 3380              	.LASF79:
 3381 0656 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 3381      656E7365 
 3381      5F435344 
 3381      5F726177 
 3381      46696C74 
 3382              	.LASF75:
 3383 0672 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 3383      656E7365 
 3383      5F435344 
 3383      5F687973 
 3383      74657265 
 3384              	.LASF47:
 3385 068a 6465626F 		.ascii	"debounceIndex\000"
 3385      756E6365 
 3385      496E6465 
 3385      7800
 3386              	.LASF41:
 3387 0698 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 3387      656E7365 
 3387      5F435344 
 3387      5F476574 
 3387      46696E67 
 3388              	.LASF31:
 3389 06b8 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 3389      656E7365 
 3389      5F435344 
 3389      5F557064 
 3389      61746557 
 3390              	.LASF54:
 3391 06da 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 3391      656E7365 
 3391      5F435344 
 3391      5F436865 
 3391      636B4973 
 3392              	.LASF50:
 3393 06fe 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 3393      656E7365 
 3393      5F435344 
 3393      5F436865 
 3393      636B4973 
 3394              	.LASF23:
 3395 071f 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 3395      656E7365 
 3395      5F435344 
 3395      5F557064 
ARM GAS  C:\Users\Sausy\AppData\Local\Temp\ccLQi9zI.s 			page 115


 3395      61746542 
 3396              	.LASF25:
 3397 0746 7369676E 		.ascii	"sign\000"
 3397      00
 3398              	.LASF52:
 3399 074b 6E756D4F 		.ascii	"numOfSensors\000"
 3399      6653656E 
 3399      736F7273 
 3399      00
 3400              	.LASF77:
 3401 0758 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 3401      656E7365 
 3401      5F435344 
 3401      5F726177 
 3401      44617461 
 3402              	.LASF68:
 3403 0772 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3403      656E7365 
 3403      5F435344 
 3403      5F73656E 
 3403      736F7242 
 3404              	.LASF26:
 3405 0791 74656D70 		.ascii	"tempRaw\000"
 3405      52617700 
 3406              	.LASF56:
 3407 0799 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3407      656E7365 
 3407      5F435344 
 3407      5F446973 
 3407      61626C65 
 3408              	.LASF70:
 3409 07b4 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3409      656E7365 
 3409      5F435344 
 3409      5F73656E 
 3409      736F724F 
 3410              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
